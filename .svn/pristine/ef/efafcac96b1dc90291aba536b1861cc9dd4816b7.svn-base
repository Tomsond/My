package com.thinkive.fxc.ismp.bus.base.business.dao.impl;

import java.util.List;

import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessTableConstants;
import com.thinkive.fxc.ismp.bus.base.business.dao.NodePropertyConfigDao;
import com.thinkive.fxc.ismp.bus.base.business.model.NodePropertyConfigModel;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;

/**
 * @描述: 节点属性配置表(T_ISMP_NODE_PROPERTY_CONFIG)数据层接口实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 刘恺
 * @版本: 2.0.0 
 * @创建时间: 2016年8月19日 下午5:11:20
 */
public class NodePropertyConfigDaoImpl extends ISMPBaseDao implements NodePropertyConfigDao
{
	
	@Override
	@SuppressWarnings("unchecked")
	public List<NodePropertyConfigModel> queryByNodeIdAndState(String nodeId, String state)
	{
		StringBuilder sql = new StringBuilder("SELECT ID,NODE_ID,PROPERTY_KEY,DESCRITION,PROPERTY_VALUE,STATE FROM ");
		sql.append(BusinessTableConstants.T_ISMP_NODE_PROPERTY_CONFIG);
		sql.append(" WHERE NODE_ID = ? AND STATE = ?");
		return ModelUtil.packList(getJdbcTemplate().query(sql.toString(), new Object[] { nodeId, state }), NodePropertyConfigModel.class);
	}

    @Override
    public NodePropertyConfigModel queryByNodeIdAndStateAndPropertyKey(String nodeId, String propertyKey, String state)
    {

        StringBuilder sql = new StringBuilder("SELECT ID,NODE_ID,PROPERTY_KEY,DESCRITION,PROPERTY_VALUE,STATE FROM ");
        sql.append(BusinessTableConstants.T_ISMP_NODE_PROPERTY_CONFIG);
        sql.append(" WHERE NODE_ID = ? AND STATE = ? AND PROPERTY_KEY = ?");
        return ModelUtil.packInfo(getJdbcTemplate().queryMap(sql.toString(), new Object[] { nodeId, state, propertyKey}), NodePropertyConfigModel.class);
    }
	
}
