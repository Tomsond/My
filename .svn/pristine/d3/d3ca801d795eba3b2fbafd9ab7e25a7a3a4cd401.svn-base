package com.thinkive.fxc.ismp.bus.business.assets.thirdbank.function;

import com.thinkive.base.exception.BusinessException;
import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.ThirdBankModel;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.service.UserSnapShotService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.contants.ThirdBankContants;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.contants.ThirdBankErrorCode;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.model.UserBankBindModel;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.service.ThirdBankService;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.vo.ThirdBankBusinessInfoVo;
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.server.InvokeException;
import com.thinkive.server.ResultVo;

/**
 * @描述: 三方存管-取消资金账号和银行卡的绑定
 * @条件：  1.查询存管银行当天是否有交易记录 2.查询存管银行是否有正在办理的业务 3.查询存管银行资金余额是否为0 4.查询存管银行利息基数是否有0
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年8月31日 上午11:30:15
 */
public class Function1004137 extends ISMPBaseFunction
{
	
	private Long userId; //用户编号
	
	private String fundAccount; //主资金账号
	
	private String zjPassword; //资金密码
	
	private Long bankConfigId; //三方存管配置编号
	
	private String opAccount; //旧银行对应的资金账号
	
	private ThirdInterface thirdInterface;
	
	private ThirdBankService thirdBankService;
	
	private UserSnapShotService userSnapShotService;
	
	@Override
	public ResultVo execute() throws Exception
	{
		
		//step1:获取入参并校验
		checkInput();
		
		//step2:根据资金账号获取用户信息
		UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserInfoVo userInfoVo = userInfoService.queryAndCheckUserByUserIdAndAccount(userId, fundAccount);
		
		//step3:检测需要注销的银行卡是否可操作
		thirdBankService = SpringHelper.getBean(ThirdBankContants.SERVICE_ID_THIRDBANK, ThirdBankService.class);
		ThirdBankModel thirdBankModel = thirdBankService.queryThirdBankModelById(bankConfigId);//更具ID获取对应银行的三方存管配置信息
		thirdBankService.checkTradeTime();
		
		//没有这种三方存管配置
		if (thirdBankModel == null)
		{
			throw new BusinessException(ThirdBankErrorCode.NO_BANKCODE);
		}
		
		//查询用户已绑定的银行
		UserBankBindModel bankBindModel = thirdBankService.queryByBankCodeAndFundAccountAndUserId(thirdBankModel.getBankNo(), opAccount, userId);
		if (null == bankBindModel)
		{
			throw new BusinessException(ThirdBankErrorCode.NO_MATCHING_USERBANKBIND);//用户没有匹配的银行卡
		}
		if (DictionaryConstants.BOL_TRUE.equals(bankBindModel.getIsMainCard()))
		{
			throw new BusinessException(ThirdBankErrorCode.NO_CANCEL_MAINBANKCARD);//用户不能取消主卡
		}
		
		//step4:打包注销三方存管银行入参
		DataRow thirdInput = DataFormatUtils.packThirdInput(userInfoVo);
		thirdInput.set("bank_code", thirdBankModel.getLinkBankOrg());
		thirdInput.set("card_num", bankBindModel.getAccount());
		thirdInput.set("zj_password", zjPassword);
		thirdInput.set("op_account", opAccount);
		thirdInput.set("money_type", bankBindModel.getMoneyType());
		
		//step5:注销存管银行时检测条件
		thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
		DataRow cancelCheckResult = thirdBankService.cancelCheck(opAccount, fundAccount, thirdInput);

		//step6:条件满足，注销存管银行
		if (DictionaryConstants.BOL_TRUE.equals(cancelCheckResult.getString("checkFlag")))
		{
			//将银行卡和资金账号取消绑定
			DataRow cancelResult = thirdInterface.cancelAccountBindBankCard(thirdInput);
			if (!cancelResult.getBoolean("flag"))
			{
				//注销失败
				throw new BusinessException(ThirdBankErrorCode.CANCEL_THIRDBANKBIND_FAILURE, cancelResult.getString("message"));
			}
			else
			{
				//注销成功，添加业务办理流水
				Long businessId = addBusinessFlow(userId, fundAccount, bankBindModel, opSource);

				//添加业务办理快照
				userSnapShotService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERSNAPSHOT, UserSnapShotService.class);
				userSnapShotService.addUserSnapShot(businessId, userInfoVo);
			}
			
		}
		
		ResultVo resultVo = new ResultVo();
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		resultVo.setResult(cancelCheckResult);
		return resultVo;
	}
	
	/**
	 * @描述：获取入参并校验
	 * @作者：田源
	 * @时间：2016年8月31日 下午4:31:38
	 * @throws InvokeException
	 */
	private void checkInput() throws InvokeException
	{
		userId = Long.valueOf(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID));
		opSource = this.getStrParameter("op_source");
		zjPassword = this.getStrParameter("zj_password");
		fundAccount = this.getAndCheckBlankStrParam("fundAccount", ErrorCodeCheckInput.BLANK_FUNDACCOUNT);
		opAccount = this.getAndCheckBlankStrParam("op_account", ErrorCodeCheckInput.BALNK_OP_ACCOUNT);
		bankConfigId = Long.valueOf(this.getAndCheckBlankStrParam("bankConfigId", ErrorCodeCheckInput.BLANK_ENUM_BANKCONFIGID));//三方存管配置编号
	}
	
	private Long addBusinessFlow(Long user_id, String fund_account, UserBankBindModel bank, String op_source) throws Exception
	{
		ThirdBankBusinessInfoVo bankBusinessInfoVo = new ThirdBankBusinessInfoVo();
		bankBusinessInfoVo.setUserId(user_id);
		bankBusinessInfoVo.setNodeId(DictionaryConstants.FLOW_LASTSTEP_NEXT);//三方存管绑定银行卡只有一步，此处节点为完成
		bankBusinessInfoVo.setIsComplete(DictionaryConstants.BOL_TRUE);//三方存管绑定银行卡只有一步，直接完成
		bankBusinessInfoVo.setDealResult(DictionaryConstants.DEAL_RESULT_SUCCESS);//提交成功
		bankBusinessInfoVo.setOpSource(op_source);
		bankBusinessInfoVo.setOpStation(opStation);
		bankBusinessInfoVo.setIp(ip);
		bankBusinessInfoVo.setFundAccount(fund_account);
		bankBusinessInfoVo.setOpType(ThirdBankContants.THIRDBANK_OP_TYPE_CANCEL);
		bankBusinessInfoVo.setOldBankcode(bankConfigId.toString());
		bankBusinessInfoVo.setOldBanknum(bank.getAccount());
		return thirdBankService.addThirdBankBusinessInfoVo(bankBusinessInfoVo);
	}
}
