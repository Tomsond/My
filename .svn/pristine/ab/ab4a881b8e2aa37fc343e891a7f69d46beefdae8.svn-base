package com.thinkive.fxc.ismp.bus.base.business.function;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;

import com.thinkive.base.exception.BusinessException;
import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BasicServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.SurveyService;
import com.thinkive.fxc.ismp.bus.base.basicdata.vo.QuestionInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeSystem;
import com.thinkive.server.InvokeException;
import com.thinkive.server.ResultVo;

/**
 * @描述: 公共功能-获取问卷
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年8月30日 上午11:19:18
 */
public class Function1004138 extends ISMPBaseFunction
{
   private String subjectCode;//问卷主题编号
   private Long businessId;//业务实例ID
   private String nodeId;//业务节点标识
    
    public ResultVo execute() throws Exception
    {
        //step1:获取入参并校验
    	checkInput();
    	
    	//step2:获取问卷
    	SurveyService surveyService = SpringHelper.getBean(BasicServiceBeanIdConstants.SERVICE_ID_SURVEY, SurveyService.class); 
    	List<QuestionInfoVo> infoVos = null;
    	if(null != businessId && StringUtils.isNotBlank(nodeId))
    	{
    	    infoVos=surveyService.queryByBusinessIdAndNodeId(businessId, nodeId);
    	}
    	else
    	{
    	    infoVos = surveyService.queryBySubjectCode(subjectCode);
    	}
		if(null ==  infoVos){
		    throw new BusinessException(ErrorCodeSystem.QUESTION_QUERY_FAIL);
		}
		
		//step4:打包脚本
		List<DataRow> result = new ArrayList<DataRow>();
		for (QuestionInfoVo questionInfoVo : infoVos)
        {
		    DataRow item = new DataRow();
		    item.set("sub_id", questionInfoVo.getSubId());// 问卷主题ID
		    item.set("que_id", questionInfoVo.getQueId());//问题ID
            item.set("q_name", questionInfoVo.getQuestionContent());//问题内容
            item.set("type", questionInfoVo.getType());//问题类型（0：单选，1：多选）
            item.set("ans_id", questionInfoVo.getAId());//答案ID
            item.set("a_name", questionInfoVo.getName());//答案内容
            item.set("mark", questionInfoVo.getMark());//答案分数
            item.set("is_check", questionInfoVo.getIsCheck());//该答案是否被选择：true被选择，false未被选择
            result.add(item);
        }
		
		//step5:出参
		ResultVo resultVo = new ResultVo();
		resultVo.setResult(result);
		resultVo.setErrorNo(0);
		resultVo.setErrorMsg("调用成功");
        return resultVo;
    }
    
    private void checkInput() throws InvokeException
	{
        //一：传入问卷主题编号  二：传入业务实例ID和业务节点标识  前端两种入参情况二选一
        subjectCode=this.getStrParameter("subject_code");//问卷主题编号
        if(StringUtils.isBlank(subjectCode)){
            String businessIdStr=this.getStrParameter("business_id");;//业务实例ID
            subjectCode=this.getStrParameter("subject_code");//问卷主题编号
            if(StringUtils.isBlank(businessIdStr)||StringUtils.isBlank(subjectCode)){
                throw new BusinessException(ErrorCodeCheckInput.BLANK_SURVEYPARAMS);
            }
            businessId=Long.valueOf(businessIdStr);
        }
	}
}
