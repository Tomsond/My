package com.thinkive.fxc.ismp.bus.third.service.impl;

import java.util.Calendar;
import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.DateHelper;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.base.util.StringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.UserExtendModel;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.service.ThirdFirstTransactionService;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;

public class ThirdFirstTransactionServiceImpl implements ThirdFirstTransactionService
{
	
	@Override
	public String getFirstTransactionDate(UserInfoVo userInfoVo, boolean isTradeTime) throws Exception
	{
		//先查询数据库是否有数据，没有再查询中登
		UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserExtendModel userExtend = userInfoService.queryUserExtendByUserId(userInfoVo.getUserId());
		//数据库有首次交易日则直接返回，不用查询第三方接口
		if (userExtend != null && !StringHelper.isBlank(userExtend.getFirstTradingDay()))
		{
			return userExtend.getFirstTradingDay();
		}
		//判断是否是交易时间
		String first_trdDate = "";
		if (isTradeTime)
		{
			DataRow thirdInpt = DataFormatUtils.packThirdInput(userInfoVo);
			ThirdInterface thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
			DataRow queryData = thirdInterface.getFirstTransactionDate(thirdInpt);
			first_trdDate = queryData.getString("first_trdDate");
			//如果查询不到数据，返回""
			if (StringHelper.isBlank(first_trdDate))
			{
				return first_trdDate;
			}
			UserExtendModel updateExtend = new UserExtendModel();
			updateExtend.setUserId(userExtend.getUserId());
			updateExtend.setFirstTradingDay(first_trdDate);
			userInfoService.updateUserExtend(updateExtend);
		}
		return first_trdDate;
	}
	
	@Override
	public DataRow checkTradeExperience(UserInfoVo userInfoVo, boolean isTradeTime, int month) throws Exception{
		String flag = ThirdDictionaryConstants.TRADEEXPERIENCE_CHECK_FLAG_FAIL;
		String firstTrdDate = getFirstTransactionDate(userInfoVo, isTradeTime); 
		//没有查询到数据
		if (StringUtils.isBlank(firstTrdDate) || firstTrdDate.equals("0")){
			flag = ThirdDictionaryConstants.TRADEEXPERIENCE_CHECK_FLAG_NODATA;
		}else{
			flag = checkFirstTradeTime(firstTrdDate, month) ? ThirdDictionaryConstants.TRADEEXPERIENCE_CHECK_FLAG_PASS : ThirdDictionaryConstants.TRADEEXPERIENCE_CHECK_FLAG_FAIL;
		}
		DataRow result = new DataRow();
		result.set("flag", flag);
		result.set("firstTrdDate", firstTrdDate);
		return result;
	}
	
	/**
	 * @描述：校验时间是否过了N月
	 * @作者：刘恺
	 * @创建时间: 2017年3月1日 上午11:25:22
	 * @param firsTransactionData
	 * @param month
	 * @return
	 */
	private boolean checkFirstTradeTime(String firsTransactionData, int month){
	    
		DataRow firstTradeTimeResult = new DataRow();
		firstTradeTimeResult.set("flag", DictionaryConstants.BOL_TRUE);
		boolean flag = true;
		Date firstDate = DateHelper.parseString(firsTransactionData, "yyyyMMdd");
		Calendar limitCalendar = Calendar.getInstance();
		limitCalendar.setTime(firstDate);
		limitCalendar.add(Calendar.MONTH, month);
		Calendar now = Calendar.getInstance();
		now.set(Calendar.HOUR_OF_DAY, 0);
		now.set(Calendar.MINUTE, 0);
		now.set(Calendar.SECOND, 0);
		int compareResult = now.compareTo(limitCalendar);
		if (-1 == compareResult)
		{ //未满N月
			flag = false;
		}
		return flag;
	}
}
