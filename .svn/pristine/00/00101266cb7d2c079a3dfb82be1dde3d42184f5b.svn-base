package com.thinkive.fxc.ismp.bus.business.resetpwd.service.impl;

import java.util.List;

import com.thinkive.base.jdbc.session.Session;
import com.thinkive.base.jdbc.session.SessionFactory;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.vo.BusinessEntityAndConfigVO;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.business.resetpwd.dao.ResetPwdEntityDao;
import com.thinkive.fxc.ismp.bus.business.resetpwd.dao.ResetPwdTypeDao;
import com.thinkive.fxc.ismp.bus.business.resetpwd.model.ResetPwdExtendModel;
import com.thinkive.fxc.ismp.bus.business.resetpwd.model.ResetPwdTypeModel;
import com.thinkive.fxc.ismp.bus.business.resetpwd.service.ResetPwdService;
import com.thinkive.fxc.ismp.bus.business.service.impl.BusinessCommonServiceImpl;

public class ResetPwdServiceImpl extends BusinessCommonServiceImpl implements ResetPwdService
{
	
	private ResetPwdEntityDao resetPwdEntityDao;
	
	private ResetPwdTypeDao resetPwdTypeDao;
	
	public void setResetPwdTypeDao(ResetPwdTypeDao resetPwdTypeDao)
	{
		this.resetPwdTypeDao = resetPwdTypeDao;
	}
	
	public void setResetPwdEntityDao(ResetPwdEntityDao resetPwdEntityDao)
	{
		this.resetPwdEntityDao = resetPwdEntityDao;
	}
	
	@Override
	public BusinessEntityAndConfigVO queryEacVoNotCompleteByFundAccount(String fundAccount)
	{
		return resetPwdEntityDao.queryEacVoNotCompleteByFundAccount(fundAccount);
	}
	
	@Override
	public BusinessEntityAndConfigVO queryEacVoNotCompleteByFundAccountNew(String fundAccount,String flag)
	{
		return resetPwdEntityDao.queryEacVoNotCompleteByFundAccountNew(fundAccount,flag);
	}
	
	@Override
	public BusinessEntityAndConfigVO queryEacVoNotCompleteByFundAccount(String fundAccount, String businessCode) {
		return resetPwdEntityDao.queryEacVoNotCompleteByFundAccount(fundAccount, businessCode);
	}
	
	@Override
	public int addResetPwdExtend(ResetPwdExtendModel resetPwdExtendModel)
	{
		return resetPwdEntityDao.addResetPwdExtend(resetPwdExtendModel);
	}
	
	@Override
	public BusinessEntityModel addBusinessEntityAndExtend(BusinessEntityModel businessEntityModel, String fundAccount, String currNodeId) throws Exception
	{
		
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			
			//step1：新增业务办理实例
			businessEntityModel = this.addBusinessEntityModel(businessEntityModel, session);
			
			Long businessId = businessEntityModel.getId();
			String ip = businessEntityModel.getIp();
			String opSource = businessEntityModel.getOpSource();
			String opStation = businessEntityModel.getOpStation();
			
			ResetPwdExtendModel resetPwdExtendModel = new ResetPwdExtendModel();
			resetPwdExtendModel.setFundAccount(fundAccount);
			resetPwdExtendModel.SetBusinessId(businessId);
			resetPwdEntityDao.addResetPwdExtend(resetPwdExtendModel, session);
			
			//step2：新增业务节点记录
			this.addFlowNodeModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step3：添加节点操作记录
			this.addNodeLogModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//提交事务
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
		return businessEntityModel;
	}
	
	@Override
	public List<ResetPwdTypeModel> addBatchPwdType(List<ResetPwdTypeModel> resetPwdTypeModels)
	{
		return resetPwdTypeDao.addBatch(resetPwdTypeModels);
	}
	
}
