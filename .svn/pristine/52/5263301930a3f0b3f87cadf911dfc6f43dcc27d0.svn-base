package com.thinkive.fxc.ismp.bus.business.mark;

import org.apache.log4j.Logger;

import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.ProprietyModel;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.ProprietyService;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.server.ResultVo;
import com.thinkive.server.util.SpringUtil;



/**
 * 作者：MIKE
 * 公司：深圳市思迪信息技术股份公司
 * 日期时间：2017年6月8日 下午3:52:36
 * 说明：适当性匹配业务表记录类
 */
public class Function1004510 extends ISMPBaseFunction
{
	private Long user_id;
    private String risk_level;//测评等级
	private String service_time;//拟投资期限
	private String question;//题目
	private String options;//选项
	private String answer;//答案
	private String state;//匹配状态（0：不匹配,1：匹配）
	private String score;//分数
	private String create_date;//创建时间
	private String business_code;//业务类型
	private String business_id;//实例id
	private String extend1;//
	private String extend2;//
	private String extend3;
	
	private ProprietyService service;
	
	private UserInfoService userInfoService;
	
	private Logger logger = Logger.getLogger(Function1004510.class);
	@Override
	public ResultVo execute() throws Exception
	{
		initVar();
		ResultVo resultVo = new ResultVo();
		userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserInfoVo userInfoVo = userInfoService.queryAndCheckUserByUserIdAndType(user_id, ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
		service = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_PROPRIETY, ProprietyService.class);
		String account = userInfoVo.getFundAccount();
		String name = userInfoVo.getName();
		ProprietyModel model = new ProprietyModel();
		model.setAnswer(answer);
		model.setServicetime(service_time);
		model.setRisklevel(risk_level);
		model.setScore(score);
		model.setState(state);
		model.setOptions(options);
		model.setQuestion(question);
		model.setbusinesscode(business_code);
		model.setbusinessid(business_id);
		model.setextend1(extend1);
		model.setextend2(extend2);
		model.setextend3(extend3);
		model.setUserid(user_id);
		try {
			service.InsertPropriety(model);
			resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
			resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		} catch (Exception e) {
			resultVo.setErrorNo(-1);
			logger.info("[1005010]留痕异常："+e);
			resultVo.setErrorMsg("留痕记录失败！");
		}
		
		return resultVo;
		
	}

	private void initVar()
	{
		user_id = this.formatLongParam(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID), ErrorCodeCheckInput.LONG_FORMAT_ERROR);
		risk_level = this.getStrParameter("risk_level");
		service_time = this.getStrParameter("service_time");
		question = this.getStrParameter("question");
		options = this.getStrParameter("options");
		answer = this.getStrParameter("answer");
		state = this.getStrParameter("state");
		score = this.getStrParameter("score");
		create_date = this.getStrParameter("create_date");
		business_code = this.getStrParameter("business_code");
		business_id = this.getStrParameter("business_id");
		extend1 = this.getStrParameter("extend1");
		extend2 = this.getStrParameter("extend2");
		extend3 = this.getStrParameter("extend3");
	}	
}
