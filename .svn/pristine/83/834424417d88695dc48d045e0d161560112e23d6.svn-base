package com.thinkive.fxc.ismp.bus.business.ggt.function;


import java.util.Map;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BasicServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.SurveySubjectModel;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.AnswerScoreService;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.SurveyService;
import com.thinkive.fxc.ismp.bus.base.basicdata.vo.QuestionInfoVo;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.function.IsmpFlowBaseFunction;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.model.NodePropertyConfigModel;
import com.thinkive.fxc.ismp.bus.base.business.service.BusinessEntityService;
import com.thinkive.fxc.ismp.bus.base.business.service.NodePropertyConfigService;
import com.thinkive.fxc.ismp.bus.base.business.service.SurveyAnswerRecordService;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo; 
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput; 
import com.thinkive.fxc.ismp.bus.business.ggt.contants.GgtContants; 
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdTBASConstants;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.server.InvokeException;
import com.thinkive.server.ResultVo;

/**
 * 
 * @描述: 港股通-提交业务知识测评
 * @版权: Copyright (c) 2019 
 * @公司: 思迪科技 
 * @作者: 李智凡
 * @版本: 1.0 
 * @创建日期: 2019年6月20日 
 * @创建时间: 下午1:55:21
 */
public class Function1004211 extends IsmpFlowBaseFunction{
	
    private Long userId;//用户编号
	
	private String answerStr;//答案信息
	
	private String sub_type;//提交题目类型 ggt深港，沪港一起都提交
	
	private String question_source;   
	
	@SuppressWarnings("unchecked")
    public ResultVo execute() throws Exception{
		
		checkInput();
		
		UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserInfoVo userInfo = userInfoService.queryAndCheckUserByUserIdAndType(userId, ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
	        
        //查询正在办理的港股通业务数据
		BusinessEntityService businessEntityService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_BUSINESSENTITY, BusinessEntityService.class);
        BusinessEntityModel businessEntityModel=businessEntityService.queryNotCompleteByUserIdAndBusinessCode(userId, businessCode);
		
        //查询港股通风险测评节点提交到本地数据库问卷编号
        NodePropertyConfigService nodePropertyConfigService=SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_NODEPROPERTYCONFIG, NodePropertyConfigService.class);
        NodePropertyConfigModel nodePropertyConfigModel=nodePropertyConfigService.queryByNodeIdAndStateAndPropertyKey(nodeId, GgtContants.GGT_RISK_LOCAL_CODE, DictionaryConstants.BOL_TRUE);
        if(null == nodePropertyConfigModel){
            throw new InvokeException("港股通业务知识测评节点属性配置错误",-100421101); 
        }
        String subjectCode=nodePropertyConfigModel.getPropertyValue();//要提交的本地问卷编号
        SurveyService surveyService = SpringHelper.getBean(BasicServiceBeanIdConstants.SERVICE_ID_SURVEY, SurveyService.class); 
        SurveySubjectModel surveySubjectModel=surveyService.queryBySubject(subjectCode);
        if(null == surveySubjectModel){
            throw new InvokeException("未找到对应主题的业务知识测评问卷",-100421102);
        }
        
        //提交答案到数据库
        SurveyAnswerRecordService surveyAnswerRecordService=SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SURVEYANSWERRECORD, SurveyAnswerRecordService.class);
        surveyAnswerRecordService.addOrUpdateAnswer(answerStr, businessEntityModel.getId(), surveySubjectModel.getId(), nodeId);
        DataRow riskRow=surveyAnswerRecordService.querySourceAndDefine(businessEntityModel.getId(), nodeId);
		
        //将问卷数据提交到第三方接口
        ThirdInterface thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE,ThirdInterface.class);
        DataRow input = DataFormatUtils.packThirdInput(userInfo);
        input.set("riskValue", riskRow.getString("score"));
        input.set("riskName", riskRow.getString("define"));
        input.set("riskLevel", riskRow.getString("define_value"));
        input.set("answer", answerStr);
        input.set("survey_sn", ThirdTBASConstants.SNO_HGTSDXCP);
        if ( DictionaryConstants.QUESTION_COMMIT_TYPE_LOCAL.equals(question_source) ){
            //问卷来源 0：本地数据库  1：第三方接口 
            Map<String, Object> result = surveyService.countUserAnswersByLocalSource(answerStr, subjectCode);
            Map<String, QuestionInfoVo> standardAnsersMap = (Map<String, QuestionInfoVo>) result.get("standardQuestionAndAnsersMap");
            input.set("answer", DataFormatUtils.formatDDAnswer(answerStr, standardAnsersMap));
        }
        //东亚有两套（深港、沪港）知识测评
        DataRow thirdRow = new DataRow();
        if(sub_type.equals("sgt") || sub_type.equals("ggt"))
        {
            input.set("survey_sn", ThirdTBASConstants.SNO_SGTSDXCP);
            thirdRow = thirdInterface.addOrUpdateQuestionnaire(input);
        }
        if(sub_type.equals("hgt") || sub_type.equals("ggt"))
        {
            input.set("survey_sn", ThirdTBASConstants.SNO_HGTSDXCP);
            thirdRow = thirdInterface.addOrUpdateQuestionnaire(input);
        }
        
        
        
        //获取港股通业务知识测评可通过等级
        NodePropertyConfigModel propertyConfigModel=nodePropertyConfigService.queryByNodeIdAndStateAndPropertyKey(nodeId, GgtContants.GGT_KNOWLEDGE_PASS_VALUE, DictionaryConstants.BOL_TRUE);
        if(null == propertyConfigModel){
            throw new InvokeException("港股通业务知识测评节点属性配置错误", -100421103);
        }
        String passValue=propertyConfigModel.getPropertyValue();
        String[] passValues=passValue.split(",");
        
        String score=thirdRow.getString("riskvalue");
        if(null == score){
            score=riskRow.getString("score");
        }
        
        //分数满足要求则更新业务办理流程数据
		String check_flag = DictionaryConstants.BOL_FALSE;//默认业务知识测评不通过
		if (Double.valueOf(score) >= Integer.valueOf(passValues[0])&&Double.valueOf(score)  <= Integer.valueOf(passValues[1])){ 
		    businessEntityModel.setId(businessEntityAndConfigVO.getId());
            businessEntityModel.setNodeId(submitBprocNodeConfigAndDefineVO.getNextBpNodeId());
            businessEntityService.update(businessEntityModel); 
		    check_flag = DictionaryConstants.BOL_TRUE;
		    
		    //保存测评分数
            AnswerScoreService answerScoreService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_ANSWERSCORE, AnswerScoreService.class);
            answerScoreService.addOrUpdateAnswerScore(businessEntityModel.getId() + "", score, nodeId, "");
		}
		
		//返回结果集
		DataRow resultData = new DataRow();
		resultData.set("check_flag", check_flag);
		resultData.set("score", score);
		resultData.set("businessEntityModel", businessEntityModel);
		ResultVo resultVo = new ResultVo();
		resultVo.setResult(resultData);
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		return resultVo;
	}
	
	
	private void checkInput() throws InvokeException{
	    question_source = this.getStrParameter("question_source", "0"); //问卷来源 0：本地数据库  1：第三方接口
	    userId = Long.valueOf(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID));
        answerStr = this.getAndCheckBlankStrParam("answerStr", ErrorCodeCheckInput.BLANK_ANSWERSTR);
        sub_type = this.getStrParameter("ggttype","ggt");//深港通和沪港通有两套题目
	}
	
}
                                                                                