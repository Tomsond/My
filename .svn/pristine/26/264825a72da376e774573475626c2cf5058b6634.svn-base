package com.thinkive.fxc.ismp.bus.business.mark;

import java.util.Date;
import java.util.List;

import com.thinkive.base.config.Configuration;
import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.DateHelper;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.base.util.StringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BasicServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.EnumValueModel;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.EnumInfoService;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdTBASConstants;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.server.ResultVo;
import com.thinkive.server.util.SpringUtil;


/**
 * 作者：MIKE
 * 公司：深圳市思迪信息技术股份公司
 * 日期时间：2017年6月3日 上午11:25:57
 * 说明：适当性匹配风险等级判断
 */
public class Function1004505 extends ISMPBaseFunction
{
	private Long userId;
	
	private String type;
	
	private String business_type;
	
	private UserInfoService userInfoService;
	
	private ThirdInterface thirdInterface;
	@Override
	public ResultVo execute() throws Exception
	{
		initVar();
		ResultVo resultVo = new ResultVo();
		userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserInfoVo userInfoVo = userInfoService.queryAndCheckUserByUserIdAndType(userId, ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
		DataRow data = new DataRow();
		data.set("falg", "0");
		thirdInterface = SpringUtil.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
	    DataRow fxcpInput = DataFormatUtils.packThirdInput(userInfoVo);
		fxcpInput.set("user_id", userId);
		fxcpInput.set("survey_sn", ThirdTBASConstants.SNO_FXCP);
	    DataRow FxcpDr = thirdInterface.getQuestionnaire(fxcpInput);
	    DataRow fxcp = thirdInterface.qryClientPrefer(fxcpInput);
	    FxcpDr.set("min_rank_flag", fxcp.getString("min_rank_flag"));//0 非最低 1最低
		if(type.equals("0")){//匹配适当性风险等级
			//查询风险测评结果
		    DataRow fxcpInfo = packFxcp(FxcpDr);
			String subitemname = fxcpInfo.getString("subitemname");
			EnumInfoService enumService = SpringHelper.getBean(BasicServiceBeanIdConstants.SERVICE_ID_ENUMINFO, EnumInfoService.class);
			DataRow recommend =enumService.queryRecommend(fxcpInfo.getString("risklevel"));
			if(StringHelper.isNotEmpty(business_type)){
				DataRow Model = enumService.queryAppropriateness(business_type,userId);
				String subname =Model.getString("bear_ability");
				data.set("subitemname", subitemname);
				if(StringHelper.isNotEmpty(subname)){
				if(!subname.contains(subitemname)||StringHelper.isEmpty(subitemname)){
					data.set("falg", "1");
				}
				resultVo.setResult(data);
				String extend1 =Model.getString("extend1");
				String service_time_new =Model.getString("service_time_new");
				if(StringHelper.isNotEmpty(extend1)){
					String[] strex = extend1.split("&");
					String nub ="";
					for (int i = 0; i < strex.length; i++) {
						if(i==strex.length-1){
							 nub+=strex[i];
						}else{
							nub+=strex[i]+",";
						}
					}
					Model.set("extend1", nub);
				}
				
				if(StringHelper.isNotEmpty(service_time_new)){
					String[] strex = service_time_new.split("&");
					String nub ="";
					for (int i = 0; i < strex.length; i++) {
						if(i==strex.length-1){
							 nub+=strex[i];
						}else{
							nub+=strex[i]+",";
						}
					}
					Model.set("service_time_new", nub);
				}	
					String serviceidentifier = Configuration.getString("system.varieties");//允许默认业务
					String businessname = Configuration.getString("system.varietiesName");//默认值名称
					
					String[] serviceidentifier_str = serviceidentifier.split("\\|");
					String[] businessname_str = businessname.split("\\|");
					String name="0";
					for (int i = 0; i < serviceidentifier_str.length; i++) {
						if(serviceidentifier_str[i].equals(business_type)){
							name="1";
						}
					}
					if(!StringHelper.isNotEmpty(extend1)&&name.equals("1")){
						Model.set("extend1", businessname_str[0]);
					}
					
					if(!StringHelper.isNotEmpty(service_time_new)&&name.equals("1")){
						Model.set("service_time_new", businessname_str[1]);
					}
				
				if(StringHelper.isEmpty(Model.getString("risk_level_new"))){
					Model.set("risk_level_new", fxcpInfo.getString("risklevel"));//等级
				}else if(StringHelper.isEmpty(Model.getString("score_new"))){
					Model.set("score_new", fxcpInfo.getString("riskvalue"));//分数
				}else if(StringHelper.isEmpty(Model.getString("risk_level_new"))){
					
				}
				Model.set("subitemname", fxcpInfo.getString("subitemname")); //级别名称 
				Model.set("recommend_name",""); //推荐业务办理
				if(recommend!=null&&recommend.size()>0){
				  Model.set("recommend_name", recommend.getString("item_name")); //推荐业务办理
				}
				if(StringHelper.isBlank(Model.getString("extend1"))){
					String tzzpz = "";
					DataRow tzzph= thirdInterface.qryClientPrefer(fxcpInput);
					if(tzzph!=null&&StringHelper.isNotEmpty(tzzph.getString("en_invest_kind"))){
						String[] itemarray = tzzph.getString("en_invest_kind").split(",");
						for(int i=0;i<itemarray.length;i++){
							if(itemarray[i].equals("1")){
								tzzpz+="债券、货币市场基金、债券基金等固定收益类投资品种"+"&";
							}else if(itemarray[i].equals("2")){
								tzzpz+="股票、混合型基金、偏股型基金、股票型基金等权益类投资品种"+"&";
							}else if(itemarray[i].equals("3")){
								tzzpz+="期货、融资融券等"+"&";
							}else if(itemarray[i].equals("4")){
								tzzpz+="复杂或高风险金融产品或服务"+"&";
							}else if(itemarray[i].equals("5")){
								tzzpz+="其它产品或服务"+"&";
							}
							
						}
						if(StringHelper.isNotBlank(tzzpz)){
							tzzpz=tzzpz.substring(0,tzzpz.length()-1);
						}
					}
					Model.set("extend1", tzzpz);
				}
				
				
				resultVo.setResult("Model",Model);
				}else{
					throw new Exception("为获取到业务功能服务风险等级配置！");
				}
			}else{
			  throw new Exception("business_type不能为空！");
			}
		}
		if(type.equals("1")){//判断当前用户年龄是否符合要求
			
			String identity_num = userInfoVo.getIdentityNum();
			int num =Integer.parseInt(identity_num.substring(6,10));
			String datatime =DateHelper.formatDate(new Date(),"yyyyMMdd");
			int time =Integer.parseInt(datatime.substring(0,4));
			int age =time-num;//得到当前客户年龄
			String minage = Configuration.getString("system.age");
			String[] str= minage.split("\\|");
			int min =Integer.parseInt(str[0]);
			int max =Integer.parseInt(str[1]);
			if(age<min||age>max){
				data.set("falg", "1");
			}
			data.set("age", age);
			resultVo.setResult("fxcpdr", FxcpDr);
			resultVo.setResult(data);
		}
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		return resultVo;
		
	}
	private DataRow packFxcp(DataRow data)
	{
		DataRow outPut = new DataRow();
		if (data == null)
		{
			outPut.set("query_flag", DictionaryConstants.BOL_TRUE);
			return outPut;
		}
		data.set("query_flag", DictionaryConstants.BOL_TRUE);
		outPut.set("upddate", data.getString("upddate")); //更新时间
		outPut.set("risklevel", data.getString("risklevel")); //等级 		例如： A B C D
		outPut.set("subitemname", data.getString("subitemname")); //级别名称  	例如：积极型
		outPut.set("riskvalue", data.getString("riskvalue")); //分数		例如：98
		outPut.set("status", data.getString("status")); //状态
		outPut.set("risk_end_date", data.getString("risk_end_date"));
		return outPut;
	}

    
	private void initVar()
	{
		userId = this.formatLongParam(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID), ErrorCodeCheckInput.LONG_FORMAT_ERROR);
		type = this.getStrParameter("type","0");
		business_type = this.getStrParameter("business_type");
	}	
}
