package com.thinkive.fxc.ismp.bus.base.business.function;

import com.thinkive.base.exception.BusinessException;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.service.BusinessEntityService;
import com.thinkive.fxc.ismp.bus.base.business.vo.BusinessEntityAndConfigVO;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeSystem;
import com.thinkive.server.ResultVo;

/**
 * 描述: 通用---用户主动放弃业务办理
 * 版权: Copyright (c) 2010
 * 公司: 思迪科技 
 * 作者: 刘恺
 * 版本: 1.0 
 * 创建日期: 2016年6月12日 
 * 创建时间: 下午2:19:33
 */
public class Function1004902 extends ISMPBaseFunction
{
	
	private Long userId;//用户编号
	
	private String businessCode;//业务编号
	
	public ResultVo execute() throws Exception
	{
		initVar();
		
		//step1：获取业务实例
		BusinessEntityService businessEntityService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_BUSINESSENTITY, BusinessEntityService.class);
		BusinessEntityAndConfigVO businessEntityAndConfigVO = businessEntityService.queryEacVoNotCompleteByUserIdAndBusinessCode(userId, businessCode);
		
		//step2：没有业务数据则不允许取消
		if (businessEntityAndConfigVO == null)
		{
			throw new BusinessException(ErrorCodeSystem.BUSINESS_NOFLOW);
		}
		
		//step3：如果该业务不允许
		if (DictionaryConstants.BOL_FALSE.equals(businessEntityAndConfigVO.getResetFlow()))
		{
			throw new BusinessException(ErrorCodeSystem.BUSINESS_CANNOT_RESETFLOW);
		}
		
		//step4：如果业务前端已走完则不允许取消
		if (DictionaryConstants.FLOW_LASTSTEP_NEXT.equals(businessEntityAndConfigVO.getNodeId()))
		{
			throw new BusinessException(ErrorCodeSystem.BUSINESS_SUBMITCANNOTCANCEL);
		}
		
		//修改业务状态为已取消
		BusinessEntityModel updateModel = new BusinessEntityModel();
		updateModel.setId(businessEntityAndConfigVO.getId());
		updateModel.setIsComplete(DictionaryConstants.BOL_TRUE);
		updateModel.setDealResult(DictionaryConstants.DEAL_RESULT_GIVE_UP);
		businessEntityService.update(updateModel);
		
		ResultVo resultVo = new ResultVo();
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		return resultVo;
	}
	
	private void initVar()
	{
		userId = this.formatLongParam(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID), ErrorCodeCheckInput.LONG_FORMAT_ERROR);
		businessCode = this.getAndCheckBlankStrParam("businessCode", ErrorCodeCheckInput.BLANK_BUSINESSCODE);
	}
}
