package com.thinkive.fxc.ismp.bus.business.assets.zhth.service.impl;

import java.util.List;
import java.util.Map;

import com.thinkive.base.jdbc.session.Session;
import com.thinkive.base.jdbc.session.SessionFactory;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.dao.AgreeRecordDao;
import com.thinkive.fxc.ismp.bus.base.business.dao.AuditTaskInfoDao;
import com.thinkive.fxc.ismp.bus.base.business.dao.PpTaskDao;
import com.thinkive.fxc.ismp.bus.base.business.model.AgreeRecordModel;
import com.thinkive.fxc.ismp.bus.base.business.model.AuditTaskInfoModel;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.model.PpTaskModel;
import com.thinkive.fxc.ismp.bus.base.business.service.SignAndVerifyService;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.business.assets.zhth.dao.ChangeMainFundExtendDao;
import com.thinkive.fxc.ismp.bus.business.assets.zhth.model.ChangeMainFundExtendModel;
import com.thinkive.fxc.ismp.bus.business.assets.zhth.service.ChangeMainFundService;
import com.thinkive.fxc.ismp.bus.business.service.impl.BusinessCommonServiceImpl;

public class ChangeMainFundServiceImpl extends BusinessCommonServiceImpl implements ChangeMainFundService
{
	
	private AuditTaskInfoDao auditTaskInfoDao;
	
	public void setAuditTaskInfoDao(AuditTaskInfoDao auditTaskInfoDao)
	{
		this.auditTaskInfoDao = auditTaskInfoDao;
	}
	
	private AgreeRecordDao agreeRecordDao;
	
	public void setAgreeRecordDao(AgreeRecordDao agreeRecordDao)
	{
		this.agreeRecordDao = agreeRecordDao;
	}
	
	private PpTaskDao ppTaskDao;
	
	public void setPpTaskDao(PpTaskDao ppTaskDao)
	{
		this.ppTaskDao = ppTaskDao;
	}
	
	private ChangeMainFundExtendDao changeMainFundExtendDao;
	
	public void setChangeMainFundExtendDao(ChangeMainFundExtendDao changeMainFundExtendDao)
	{
		this.changeMainFundExtendDao = changeMainFundExtendDao;
	}
	
	@Override
	public void addEntityAndAgreeAndAuditTask(BusinessEntityModel businessEntityModel, String currNodeId, List<Map<String, String>> allSignList, ChangeMainFundExtendModel changeMainFundExtendModel)
			throws Exception
	{
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			
			//step1：新增业务办理实例
			businessEntityModel.setDealResult(DictionaryConstants.DEAL_RESULT_NEEDAUTIT);
			this.addBusinessEntityModel(businessEntityModel, session);
			
			Long businessId = businessEntityModel.getId();
			String ip = businessEntityModel.getIp();
			String opSource = businessEntityModel.getOpSource();
			String opStation = businessEntityModel.getOpStation();
			
			//step2：新增业务节点记录
			this.addFlowNodeModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step3：添加节点操作记录
			this.addNodeLogModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step4：添加审核任务
			AuditTaskInfoModel auditTaskInfoModel = new AuditTaskInfoModel();
			auditTaskInfoModel.setBusinessId(businessId);
			auditTaskInfoModel.setUserId(businessEntityModel.getUserId());
			auditTaskInfoModel.setBusinessType(businessEntityModel.getBusinessCode());
			auditTaskInfoModel.setState(DictionaryConstants.BUSINESS_AUDIT_STATE_NODEAL);
			auditTaskInfoDao.addTask(auditTaskInfoModel, session);
			
			//step5：添加协议
			//根据用户提交的协议获取协议对象
			SignAndVerifyService signAndVerifyService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SIGNANDVERIFY, SignAndVerifyService.class);
			List<AgreeRecordModel> agreeRecordModels = signAndVerifyService.getAgreeRecordModels(businessEntityModel.getUserId(), allSignList, businessId, currNodeId,"");
			agreeRecordDao.addBatch(agreeRecordModels, session);
			
			//step6：添加扩展信息
			changeMainFundExtendModel.setBusinessId(businessId);
			changeMainFundExtendDao.add(changeMainFundExtendModel, session);
			//提交事务
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
	}
	
	@Override
	public void addEntityAndAgreeAndPpTask(BusinessEntityModel businessEntityModel, String currNodeId, List<Map<String, String>> allSignList, ChangeMainFundExtendModel changeMainFundExtendModel)
			throws Exception
	{
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			
			//step1：新增业务办理实例
			businessEntityModel.setDealResult(DictionaryConstants.DEAL_RESULT_NEEDPP);
			this.addBusinessEntityModel(businessEntityModel, session);
			
			Long businessId = businessEntityModel.getId();
			String ip = businessEntityModel.getIp();
			String opSource = businessEntityModel.getOpSource();
			String opStation = businessEntityModel.getOpStation();
			
			//step2：新增业务节点记录
			this.addFlowNodeModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step3：添加节点操作记录
			this.addNodeLogModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step4：添加跑批任务、
			PpTaskModel ppTaskModel = new PpTaskModel();
			ppTaskModel.setBusinessId(businessId);
			ppTaskModel.setIsLoop(DictionaryConstants.BOL_FALSE);
			ppTaskModel.setTaskName(businessEntityModel.getBusinessCode());
			ppTaskModel.setTaskStatus(DictionaryConstants.PP_TASK_STATUS_EFFECTIVE);
			ppTaskModel.setExecStatus(DictionaryConstants.PP_TASK_EXEC_STATUS_NODEAL);
			ppTaskDao.add(ppTaskModel, session);
			
			//step5：添加协议
			//根据用户提交的协议获取协议对象
			SignAndVerifyService signAndVerifyService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SIGNANDVERIFY, SignAndVerifyService.class);
			List<AgreeRecordModel> agreeRecordModels = signAndVerifyService.getAgreeRecordModels(businessEntityModel.getUserId(), allSignList, businessId, currNodeId,"");
			agreeRecordDao.addBatch(agreeRecordModels, session);
			
			//step6：添加扩展信息
			changeMainFundExtendModel.setBusinessId(businessId);
			changeMainFundExtendDao.add(changeMainFundExtendModel, session);
			//提交事务
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
	}
	
	@Override
	public void addEntityAndAgree(BusinessEntityModel businessEntityModel, String currNodeId, List<Map<String, String>> allSignList, ChangeMainFundExtendModel changeMainFundExtendModel)
			throws Exception
	{
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			
			//step1：新增业务办理实例
			this.addBusinessEntityModel(businessEntityModel, session);
			
			Long businessId = businessEntityModel.getId();
			String ip = businessEntityModel.getIp();
			String opSource = businessEntityModel.getOpSource();
			String opStation = businessEntityModel.getOpStation();
			
			//step2：新增业务节点记录
			this.addFlowNodeModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step3：添加节点操作记录
			this.addNodeLogModel(businessId, currNodeId, ip, opSource, opStation, session);
			
			//step5：添加协议
			//根据用户提交的协议获取协议对象
			SignAndVerifyService signAndVerifyService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SIGNANDVERIFY, SignAndVerifyService.class);
			List<AgreeRecordModel> agreeRecordModels = signAndVerifyService.getAgreeRecordModels(businessEntityModel.getUserId(), allSignList, businessId, currNodeId,"");
			agreeRecordDao.addBatch(agreeRecordModels, session);
			
			//step6：添加扩展信息
			changeMainFundExtendModel.setBusinessId(businessId);
			changeMainFundExtendDao.add(changeMainFundExtendModel, session);
			//提交事务
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
	}
}
