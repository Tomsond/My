//package com.thinkive.fxc.ismp.bus.business.ggt.function;
//
//import java.util.ArrayList;
//import java.util.List;
//
//import org.apache.commons.lang.StringUtils;
//
//import com.thinkive.base.jdbc.DataRow;
//import com.thinkive.base.util.SpringHelper;
//import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessConstants;
//import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
//import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
//import com.thinkive.fxc.ismp.bus.base.business.model.ChoiceAccountRecordModel;
//import com.thinkive.fxc.ismp.bus.base.business.model.FlowNodeModel;
//import com.thinkive.fxc.ismp.bus.base.business.model.ProcNodeDefineModel;
//import com.thinkive.fxc.ismp.bus.base.business.service.BusinessEntityService;
//import com.thinkive.fxc.ismp.bus.base.business.service.ChoiceAccountRecordService;
//import com.thinkive.fxc.ismp.bus.base.business.service.FlowNodeService;
//import com.thinkive.fxc.ismp.bus.base.business.service.ProcNodeDefineService;
//import com.thinkive.fxc.ismp.bus.base.business.service.SurveyAnswerRecordService;
//import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
//import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
//import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
//import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
//import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
//import com.thinkive.fxc.ismp.bus.business.ggt.contants.GgtContants;
//import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
//import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
//import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
//import com.thinkive.fxc.ismp.bus.third.constants.ThirdTBASConstants;
//import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
//import com.thinkive.server.InvokeException;
//import com.thinkive.server.ResultVo;
//
///**
// * @描述: 港股通--获取业务办理过程中的所有步骤的数据（手机端使用）【废除接口】
// * @版权: Copyright (c) 2010
// * @公司: 深圳市思迪信息技术股份有限公司
// * @作者: 田源
// * @版本: 2.0.0 
// * @创建时间: 2016年9月13日 下午6:49:01
// */
//public class Function1004207 extends ISMPBaseFunction{
//    
//	private Long userId; //用户ID
//    
//	private String query_third;//是否查询第三方
//	
//	private String businessCode = BusinessConstants.BUSINESS_GGT;       
//    
//	@Override
//	public ResultVo execute() throws Exception{
//		//获取入参并校验
//		checkInput();
//		
//		//获取用户信息
//		UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
//		UserInfoVo userInfo=userInfoService.queryAndCheckUserByUserIdAndType(userId, ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
//	    
//		//获取业务办理数据
//		BusinessEntityService businessEntityService=SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_BUSINESSENTITY, BusinessEntityService.class);
//		BusinessEntityModel businessEntityModel = businessEntityService.queryNotCompleteByUserIdAndBusinessCode(userId, businessCode);
//		
//		ThirdInterface thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
//		//查询知识测评结果（前提，有业务办理数据）
//		DataRow answerInfo = getYwzscpResult(query_third, userInfo, businessEntityModel);
//		
//		// 查询业务办理用户选择的股东账号
//		ChoiceAccountRecordService choiceAccountRecordService=SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_CHOICEACCOUNTRECORD, ChoiceAccountRecordService.class);
//		List<ChoiceAccountRecordModel> choiceAccountRecordModels=new ArrayList<ChoiceAccountRecordModel>();
//		if(null  !=  businessEntityModel){
//		    choiceAccountRecordModels=choiceAccountRecordService.queryByBusinessId(businessEntityModel.getId());
//		}
//		
//		//查询风险测评结果
//		DataRow fxcpInput = DataFormatUtils.packThirdInput(userInfo);
//		fxcpInput.set("user_id", userId);
//		fxcpInput.set("survey_sn", ThirdTBASConstants.SNO_FXCP);
//		DataRow FxcpDr = thirdInterface.getQuestionnaire(fxcpInput);
//		DataRow fxcpInfo = packFxcp(FxcpDr);
//		
//		DataRow businessInfo = packBusinessData(businessEntityModel);
//		
//		//新增是否是第一次办理的字段
//		Long completeCount = businessEntityService.countCompleteBusinessEntity(userId, businessCode);
//		businessInfo.set("isfirsttime", DictionaryConstants.BOL_FALSE);
//		boolean isFirstTime = completeCount == 0;
//		if (isFirstTime){
//			businessInfo.set("isfirsttime", DictionaryConstants.BOL_TRUE);
//		}
//		
//		ResultVo resultVo = new ResultVo();
//		resultVo.setResult("trdaccount", choiceAccountRecordModels);
//		resultVo.setResult("fxcpInfo", fxcpInfo);
//		resultVo.setResult("zscpInfo", answerInfo);
//		resultVo.setResult("businessInfo", businessInfo);
//		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
//		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
//		return resultVo;
//	}
//
//	private DataRow packThirdZscp(DataRow data){
//		DataRow outPut = new DataRow();
//		if (data == null){
//			outPut.set("query_flag", DictionaryConstants.BOL_TRUE);
//			return outPut;
//		}
//		outPut.set("query_flag", DictionaryConstants.BOL_TRUE);
//		outPut.set("zscpvalue", data.getString("riskvalue")); //分数		例如：98
//		outPut.set("zscplevel", data.getString("risklevel")); //等级 		例如： A B C D
//		outPut.set("zscplevelName", data.getString("subitemname")); //等级名称  	例如：积极型
//		return outPut;
//	}
//	
//	private DataRow packLocalZscp(DataRow data){
//		DataRow outPut = new DataRow();
//		if (data == null){
//			outPut.set("query_flag", DictionaryConstants.BOL_FALSE);
//			return outPut;
//		}
//		outPut.set("query_flag", DictionaryConstants.BOL_TRUE);
//		outPut.set("zscpvalue", data.getString("score")); //分数		例如：98
//		outPut.set("zscplevel", data.getString("define_value")); //等级 		例如： A B C D
//		outPut.set("zscplevelName", data.getString("define")); //等级名称  	例如：积极型
//		return outPut;
//	}
//	
//	private DataRow packBusinessData(BusinessEntityModel businessEntityModel){
//		DataRow result = new DataRow();
//		if (businessEntityModel == null){
//			result.set("query_flag", DictionaryConstants.BOL_FALSE);
//			return result;
//		}
//		result.set("query_flag", DictionaryConstants.BOL_TRUE);
//		result.set("id", businessEntityModel.getId());
//		result.set("create_date", businessEntityModel.getCreateDate()); //创建时间
//		result.set("state", businessEntityModel.getDealResult()); //0：前端流程未走完1：前端流程走完2：后台审核未通过3：后台审核通过 4：业务办理失败5：业务办理通过
//		Long businessId=businessEntityModel.getId();  
//		FlowNodeService  flowNodeService=SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_FLOWNODE, FlowNodeService.class);
//        List<FlowNodeModel> flowNodeModels= flowNodeService.queryByBusinessId(businessId);//获取该业务实例走过的流程步骤
//        
//        ProcNodeDefineService procNodeDefineService=SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_PROCNODEDEFINE, ProcNodeDefineService.class);
//        List<ProcNodeDefineModel> procNodeDefineModels=procNodeDefineService.queryByBusinessType(businessCode);//获取港股通所有的业务节点定义
//        
//        //对比得到哪些节点步骤是用户完成了的
//        if(null != procNodeDefineModels){
//            for (ProcNodeDefineModel procNodeDefineModel : procNodeDefineModels){
//               String nodeId=procNodeDefineModel.getNodeId();
//               if(StringUtils.isNotBlank(nodeId)){
//            	   result.set(nodeId, DictionaryConstants.BOL_FALSE);
//                   if(null != flowNodeModels){
//                       for (FlowNodeModel flowNodeModel : flowNodeModels){
//                            if(nodeId.equals(flowNodeModel.getNodeId())){
//                                result.set(nodeId, DictionaryConstants.BOL_TRUE);
//                            }
//                       } 
//                   } 
//               } 
//            }
//        }
//		return result;
//	}
//	
//	private DataRow packFxcp(DataRow data){
//		DataRow outPut = new DataRow();
//		if (data == null){
//			outPut.set("query_flag", DictionaryConstants.BOL_TRUE);
//			return outPut;
//		}
//		data.set("query_flag", DictionaryConstants.BOL_TRUE);
//		outPut.set("upddate", data.getString("upddate")); //更新时间
//		outPut.set("risklevel", data.getString("risklevel")); //等级 		例如： A B C D
//		outPut.set("subitemname", data.getString("subitemname")); //级别名称  	例如：积极型
//		outPut.set("riskvalue", data.getString("riskvalue")); //分数		例如：98
//		outPut.set("status", data.getString("status")); //状态
//		outPut.set("risk_end_date", data.getString("risk_end_date"));
//		return outPut;
//	}
//	
//	private void checkInput() throws InvokeException{
//	    userId = Long.valueOf(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID));
//		query_third = this.getStrParameter("query_third", DictionaryConstants.BOL_FALSE);
//	}
//	
//	private DataRow getYwzscpResult(String query_third, UserInfoVo userInfo, BusinessEntityModel sgtBusinessModel) throws Exception{
//	    ThirdInterface thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
//    
//		//查询知识测评结果（前提，有业务办理数据）
//		DataRow answerInfo = new DataRow();
//		if (DictionaryConstants.BOL_TRUE.equals(query_third)){
//			DataRow ywzsInput = DataFormatUtils.packThirdInput(userInfo);
//			ywzsInput.set("user_id", userInfo.getString("user_id"));
//			ywzsInput.set("survey_sn", ThirdTBASConstants.SNO_GGTSDXCP);
//			DataRow ywzsResult = thirdInterface.getQuestionnaire(ywzsInput);
//			answerInfo = packThirdZscp(ywzsResult);
//		}else if (null != sgtBusinessModel && !sgtBusinessModel.isEmpty()){
//		    SurveyAnswerRecordService surveyAnswerRecordService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SURVEYANSWERRECORD, SurveyAnswerRecordService.class);
//			DataRow answerResult = surveyAnswerRecordService.querySourceAndDefine(sgtBusinessModel.getId(), GgtContants.GGT_KNOWLEDGE);
//			answerInfo = packLocalZscp(answerResult);
//		}
//		return answerInfo;
//	}
//}
