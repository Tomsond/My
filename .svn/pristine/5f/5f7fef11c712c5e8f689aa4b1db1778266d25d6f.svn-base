package com.thinkive.fxc.ismp.bus.business.assets.thirdbank.dao.impl;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.contants.ThirdBankContants;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.dao.UserBankBindDao;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.model.UserBankBindModel;

import java.util.Date;

/**
 * @描述: 用户三方存管同步数据表(T_ISMP_USER_BANK_BIND)数据层接口实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年8月24日 上午11:24:53
 */
public class UserBankBindDaoImpl extends ISMPBaseDao implements UserBankBindDao
{

    @Override
    public void deleteByUserId(Long userId)
    {
        this.getJdbcTemplate().delete(ThirdBankContants.T_ISMP_USER_BANK_BIND, "USER_ID", userId);
        
    }

    @Override
    public UserBankBindModel add(UserBankBindModel userBankBindModel)
    {
        String id = getSeqValue(SystemConstants.DB_ISMP,ThirdBankContants.T_ISMP_USER_BANK_BIND);
        userBankBindModel.setId(Long.valueOf(id));
        userBankBindModel.setCreateTime(new Date());
        this.getJdbcTemplate().insert(ThirdBankContants.T_ISMP_USER_BANK_BIND, userBankBindModel);
        return userBankBindModel;
    }

    @Override
    public int update(UserBankBindModel userBankBindModel)
    {
        userBankBindModel.setUpdateTime(new Date());
        String[] identifys={"USER_ID","ACCOUNT","FUND_ACCOUNT"};
        String[] identifyValues={userBankBindModel.getUserId().toString(),userBankBindModel.getAccount(),userBankBindModel.getFundAccount()};
        return this.getJdbcTemplate().update(ThirdBankContants.T_ISMP_USER_BANK_BIND, userBankBindModel, identifys,identifyValues);
    }

    @Override
    public UserBankBindModel queryByAccountAndUserId(String account, Long userId)
    {
        StringBuilder sql=new StringBuilder();
        sql.append("SELECT ID,USER_ID,BANK_CODE,ACCOUNT,ISTRADE,STATUS,FUND_ACCOUNT,CREATE_TIME,UPDATE_TIME,IS_MAIN_CARD,CONTRACT_STATUS,BANKTOSECURITY_FLAG,SECURITYTOBANK_FLAG,MONEY_TYPE FROM ");
        sql.append(ThirdBankContants.T_ISMP_USER_BANK_BIND);
        sql.append(" WHERE ACCOUNT = ? AND USER_ID = ?");
        DataRow queryResult=this.getJdbcTemplate().queryMap(sql.toString(),new Object[]{account,userId});
        return ModelUtil.packInfo(queryResult, UserBankBindModel.class);
    }

    @Override
    public UserBankBindModel queryByBankCodeAndFundAccountAndUserId(String bankCode, String fundAccount,
            Long userId)
    {
        StringBuilder sql=new StringBuilder();
        sql.append("SELECT ID,USER_ID,BANK_CODE,ACCOUNT,ISTRADE,STATUS,FUND_ACCOUNT,CREATE_TIME,UPDATE_TIME,IS_MAIN_CARD,CONTRACT_STATUS,BANKTOSECURITY_FLAG,SECURITYTOBANK_FLAG,MONEY_TYPE FROM ");
        sql.append(ThirdBankContants.T_ISMP_USER_BANK_BIND);
        sql.append(" WHERE BANK_CODE = ? AND USER_ID = ? AND FUND_ACCOUNT = ?");
        DataRow queryResult=this.getJdbcTemplate().queryMap(sql.toString(), new Object[]{bankCode,userId,fundAccount});
        return ModelUtil.packInfo(queryResult, UserBankBindModel.class);
    }

    @Override
    public UserBankBindModel queryUserBindMainCard(Long userId,String fundAccount) {
        StringBuilder sql=new StringBuilder();
        sql.append("SELECT ID,USER_ID,BANK_CODE,ACCOUNT,ISTRADE,STATUS,FUND_ACCOUNT,CREATE_TIME,UPDATE_TIME,IS_MAIN_CARD,CONTRACT_STATUS,BANKTOSECURITY_FLAG,SECURITYTOBANK_FLAG,MONEY_TYPE FROM ");
        sql.append(ThirdBankContants.T_ISMP_USER_BANK_BIND);
        sql.append(" WHERE  IS_MAIN_CARD = 1 and USER_ID = ? AND FUND_ACCOUNT = ?");
        DataRow queryResult=this.getJdbcTemplate().queryMap(sql.toString(), new Object[]{userId,fundAccount});
        return ModelUtil.packInfo(queryResult, UserBankBindModel.class);
    }
}
