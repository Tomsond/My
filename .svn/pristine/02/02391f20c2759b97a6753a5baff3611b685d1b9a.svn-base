package com.thinkive.fxc.ismp.bus.base.business.function;

import com.thinkive.base.exception.BusinessException;
import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.model.NodePropertyConfigModel;
import com.thinkive.fxc.ismp.bus.base.business.model.UserInfoModel;
import com.thinkive.fxc.ismp.bus.base.business.service.BusinessEntityService;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeSystem;
import com.thinkive.fxc.ismp.bus.business.util.SmsUtils;
import com.thinkive.server.InvokeException;
import com.thinkive.server.ResultVo;

/**
 * @描述: 通用校验短信
 *      只能配置为业务的第一步节点（业务办理实例不存在，则新增业务实例。存在，则更新业务办理实例状态）
 * @版权: Copyright (c) 2016
 * @公司: 思迪科技
 * @作者: 谢能琥
 * @版本: 1.0
 * @创建日期: 2016年11月8日
 * @创建时间: 上午9:47:52
 * @功能模块: TODO
 */
public class Function1004917 extends IsmpFlowBaseFunction
{
	
	private String mobileCode; //手机验证码
	
	public ResultVo execute() throws InvokeException, Exception
	{
		ResultVo resultVo = new ResultVo();
		
		checkInput();
		
		//短信类型
		String sms_type = getSmsCode();
		
		UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		
		UserInfoModel userInfoModel = userInfoService.queryUserInfoByUserId(userId);
		
		//获取到预留手机号码
		String mobile = userInfoModel.getMobile();
		
		//验证手机验证码是否正确
		boolean checkResult = SmsUtils.checkMobileCode(mobile, mobileCode, sms_type);
		
		DataRow checkData = new DataRow();
		
		checkData.set("check_flag", DictionaryConstants.BOL_TRUE);
		
		if (!checkResult)
		{
			checkData.set("check_flag", DictionaryConstants.BOL_FALSE);
			resultVo.setResult("checkData",checkData);
			return resultVo;
		}
		
		BusinessEntityService businessEntityService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_BUSINESSENTITY, BusinessEntityService.class);
		
		//业务办理实例是否存在
		if (isNewBusiness())
		{
			//添加
			BusinessEntityModel newBusinessEntityModel = getNewBusinessEntity();
			
			businessEntityService.add(newBusinessEntityModel, nodeId);
		}
		else
		{
			//修改
			BusinessEntityModel updateBusinessEntityModel = getNewBusinessEntity();
			updateBusinessEntityModel.setId(businessEntityAndConfigVO.getId());
			businessEntityService.changeBusinessFlowNode(updateBusinessEntityModel, submitBprocNodeConfigAndDefineVO.getNodeId());
		}
		
		return resultVo;
	}
	
	public void checkInput()
	{
		
		mobileCode = this.getAndCheckBlankStrParam("mobile_code", ErrorCodeCheckInput.BLANK_VALIDATE_CODE);
		
	}
	
	private String getSmsCode()
	{
		for (NodePropertyConfigModel nodePropertyConfigModel : nodePropertyConfigModelList)
		{
			if (nodePropertyConfigModel.getPropertyKey().equals("sms_type"))
			{
				return nodePropertyConfigModel.getPropertyValue();
			}
		}
		throw new BusinessException(ErrorCodeSystem.NOT_EXIST_SMS_TYPE);
	}
}
