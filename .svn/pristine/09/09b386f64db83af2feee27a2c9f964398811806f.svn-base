/**
 * 
 */
package com.thinkive.fxc.ismp.bus.base.business.dao.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.StringUtil;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessTableConstants;
import com.thinkive.fxc.ismp.bus.base.business.dao.VideoRecordDao;
import com.thinkive.fxc.ismp.bus.base.business.model.VideoRecordModel;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;

/**
 * @描述:  业务办理视频记录表<p>T_ISMP_VIDEO_RECORD</p> 接口实现类
 * @版权: Copyright (c) 2016 
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 尹杰民
 * @版本: 2.0 
 * @创建时间: 2016年8月16日 上午11:26:40
 */
public class VideoRecordDaoImpl extends ISMPBaseDao implements VideoRecordDao
{
	
	/* (non-Javadoc)
	 * @see com.thinkive.fxc.ismp.bus.base.dao.VideoRecordDao#add(com.thinkive.fxc.ismp.bus.base.model.VideoRecordModel)
	 */
	@Override
	public VideoRecordModel add(VideoRecordModel videoRecordModel)
	{
		String id = getSeqValue(SystemConstants.DB_ISMP,BusinessTableConstants.T_ISMP_VIDEO_RECORD);
		videoRecordModel.setId(Long.valueOf(id));
		videoRecordModel.setCreateDate(new Date());
		this.getJdbcTemplate().insert(BusinessTableConstants.T_ISMP_VIDEO_RECORD, videoRecordModel);
		return videoRecordModel;
	}
	
	/* (non-Javadoc)
	 * @see com.thinkive.fxc.ismp.bus.base.dao.VideoRecordDao#update(com.thinkive.fxc.ismp.bus.base.model.VideoRecordModel)
	 */
	@Override
	public int update(VideoRecordModel videoRecordModel)
	{
		videoRecordModel.setUpdateDate(new Date());
		return this.getJdbcTemplate().update(BusinessTableConstants.T_ISMP_VIDEO_RECORD, videoRecordModel, "ID", videoRecordModel.getId());
	}
	
	/* (non-Javadoc)
	 * @see com.thinkive.fxc.ismp.bus.base.dao.VideoRecordDao#queryByParams(com.thinkive.fxc.ismp.bus.base.model.VideoRecordModel)
	 */
	@SuppressWarnings("unchecked")
	@Override
	public List<VideoRecordModel> queryByParams(VideoRecordModel params)
	{
		StringBuilder sql = new StringBuilder();
		List<String> paramsList = new ArrayList<String>();
		sql.append("SELECT ID, BUSINESS_ID, NODE_ID, VIDEO_TYPE, SAVE_SITE, IS_SERVER_RECORD, CUST_STREAM");
		sql.append(" ,SECRET_KEY, SRV_NAME, START_TIME, VIDEO_LENGTH, APPROVE_DATE, APPROVE_STAT, APPROVE_ID ");
		sql.append(" ,TOTAL_TIME, SRV_ID, MSG_CONTENT, RANDOM, CREATE_DATE, UPDATE_DATE");
		sql.append("  FROM ");
		sql.append(BusinessTableConstants.T_ISMP_VIDEO_RECORD).append(" WHERE 1=1 ");
		if (params.getId() != 0)
		{
			sql.append(" AND ID = ?");
			paramsList.add(params.getId().toString());
		}
		if ( params.getBusinessId() != 0) //框架将long null的自动转换成为0了
		{
			sql.append(" AND BUSINESS_ID = ?");
			paramsList.add(params.getBusinessId().toString());
		}
		
		if (StringUtil.isNotEmpty(params.getNodeId()))
		{
			sql.append(" AND NODE_ID = ?");
			paramsList.add(params.getNodeId().toString());
		}
		if (StringUtil.isNotEmpty(params.getVideoType()))
		{
			sql.append(" AND VIDEO_TYPE = ?");
			paramsList.add(params.getVideoType().toString());
		}
		
		List<DataRow> queryResult = this.getJdbcTemplate().query(sql.toString(), paramsList.toArray());
		return ModelUtil.packList(queryResult, VideoRecordModel.class);
	}
	
}
