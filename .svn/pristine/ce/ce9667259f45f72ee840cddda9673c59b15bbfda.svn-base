package com.thinkive.fxc.ismp.bus.business.certificate.dao.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang.StringUtils;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.DateHelper;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.business.certificate.dao.CertApplyDao;
import com.thinkive.fxc.ismp.bus.business.certificate.model.CertApplyInfo;

/**
 * 描述: 数字证书申请数据库操作实现类
 * 版权: Copyright (c) 2010
 * 公司: 思迪科技 
 * 作者: 刘恺
 * 版本: 1.0 
 * 创建日期: 2015年12月15日 
 * 创建时间: 上午10:28:33
 */
public class CertApplyDaoImpl extends ISMPBaseDao implements CertApplyDao
{
	
	private static final String TABLE = "t_ismp_b_applycert";
	
	@SuppressWarnings("unchecked")
    @Override
	public List<CertApplyInfo> queryByParams(CertApplyInfo certApplyInfo)
	{
		StringBuffer sql = new StringBuffer(
				"select id,user_id,state,upload_idcard,video,name,identity_num,iscomplete,cert_type,create_date,update_date,op_source,sign_office,papers_addr,validity_begin,validity_end,ethnicname,sex,birthday from ");
		sql.append(TABLE);
		sql.append(" where 1 = 1 ");
		List<String> params = new ArrayList<String>();
		String user_id = certApplyInfo.getUserId();
		if (StringUtils.isNotBlank(user_id))
		{
			sql.append(" and user_id = ? ");
			params.add(user_id);
		}
		String cert_type = certApplyInfo.getCertType();
		if (StringUtils.isNotBlank(cert_type))
		{
			sql.append(" and cert_type = ? ");
			params.add(cert_type);
		}
		String iscomplete = certApplyInfo.getIscomplete();
		if (StringUtils.isNotBlank(iscomplete))
		{
			sql.append(" and iscomplete = ? ");
			params.add(iscomplete);
		}
		String state = certApplyInfo.getState();
		if (StringUtils.isNotBlank(state))
		{
			sql.append(" and state = ? ");
			params.add(state);
		}
		List<DataRow> queryResult = getJdbcTemplate().query(sql.toString(), params.toArray());
		return packCertApplyInfoList(queryResult);
	}
	
	@Override
	public CertApplyInfo add(CertApplyInfo certApplyInfo)
	{
		String id = getSeqValue(SystemConstants.DB_ISMP,TABLE);
		String date_time = DateHelper.formatDate(new Date(), DateHelper.pattern_time);
		certApplyInfo.setId(id);
		certApplyInfo.setCreateDate(date_time);
		certApplyInfo.setUpdateDate(date_time);
		getJdbcTemplate().insert(TABLE, certApplyInfo);
		return certApplyInfo;
	}
	
	@Override
	public CertApplyInfo updateById(CertApplyInfo certApplyInfo)
	{
		String id = certApplyInfo.getId();
		String date_time = DateHelper.formatDate(new Date(), DateHelper.pattern_time);
		certApplyInfo.setUpdateDate(date_time);
		getJdbcTemplate().update(TABLE, certApplyInfo, "id", id);
		certApplyInfo.setId(id);
		return certApplyInfo;
	}
	
	@SuppressWarnings("unchecked")
    private CertApplyInfo packCertApplyInfo(DataRow data)
	{
		if (data == null)
		{
			return null;
		}
		CertApplyInfo certApplyInfo = new CertApplyInfo();
		certApplyInfo.putAll(data);
		return certApplyInfo;
	}
	
	private List<CertApplyInfo> packCertApplyInfoList(List<DataRow> dataList)
	{
		if (dataList == null)
		{
			return null;
		}
		List<CertApplyInfo> resultList = new ArrayList<CertApplyInfo>();
		for (DataRow item : dataList)
		{
			CertApplyInfo certApplyInfo = this.packCertApplyInfo(item);
			resultList.add(certApplyInfo);
		}
		return resultList;
	}
}
