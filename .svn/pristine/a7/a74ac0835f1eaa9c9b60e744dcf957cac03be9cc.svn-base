package com.thinkive.fxc.ismp.bus.business.user.function;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;



import com.thinkive.base.exception.BusinessException;
import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.base.util.StringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.UserExtendModel;
import com.thinkive.fxc.ismp.bus.base.business.model.UserFundAccountModel;
import com.thinkive.fxc.ismp.bus.base.business.model.UserInfoModel;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.base.util.RSA;
import com.thinkive.fxc.ismp.bus.business.rzrq.preMarginTrading.constant.ErrorCodeBusiness;
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.business.util.PwdEncryptUtil;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdTBASConstants;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.server.ResultVo;

/**
 * @描述: 云柜台对接统一账户-根据统一账户返回的数据做账户同步
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 孔小波
 * @版本: 2.0.0 
 * @创建时间: 2016年9月5日 下午11:02:10
 */
public class Function1004800 extends ISMPBaseFunction
{
	
	private String account;//帐号，包含3种帐号类型：资金帐号、交易帐号、股东号
	
	private String accountType;//资金帐号类型,缺省值：4,证券资金帐号
	
	private String pwdValue;//密码
	
	private String loginType;//登录类型,缺省值：资金帐号
	
	private String client_id;//客户编号
	
	private String org_id;//营业部编号
	
	private static final String ENCRYPT_RSA = "encrypt_rsa:";
	
	private ThirdInterface thirdInterface;
	
	private UserInfoService userInfoService;
	
	public ResultVo execute() throws Exception
	{
		initVar();
		ResultVo resultVo = new ResultVo();
		userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
		
		//资金帐号、交易密码登录
		if (DictionaryConstants.LOGIN_TYPE_LOGIN_FOR_FUNDACCOUNT.equals(loginType))
		{
		    if(StringHelper.isNotBlank(pwdValue) && pwdValue.startsWith(ENCRYPT_RSA))
            {
		        pwdValue = pwdValue.substring(ENCRYPT_RSA.length());
		        pwdValue = RSA.decrypt(pwdValue);
            }
			//同步用户信息到数据库
			Map<String, Object> accountMap = synUserInfo(account, pwdValue, org_id, client_id, accountType);
			UserInfoModel userInfo = (UserInfoModel) accountMap.get("userInfo");
			UserExtendModel userExtendModel = (UserExtendModel) accountMap.get("userExtend");
			UserFundAccountModel userFundAccount = (UserFundAccountModel) accountMap.get("userFundAccount");
			DataRow result = packResult(userInfo, userExtendModel, userFundAccount);
			resultVo.setResult(result);
		}
		//股东、手机号、未实现登录。。。
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		return resultVo;
	}
	
	private DataRow packResult(UserInfoModel userInfo, UserExtendModel userExtendModel, UserFundAccountModel userFundAccount)
	{
		DataRow dataRow = new DataRow();
		dataRow.set("user_id", userInfo.getUserId());//用户编号
		dataRow.set("birthday", userInfo.getBirthday());//生日
		dataRow.set("branch_no", userInfo.getBranchNo());//营业部
		dataRow.set("client_id", userInfo.getClientId());//客户号
		dataRow.set("identity_num", userInfo.getIdentityNum());//证件号码
		dataRow.set("identity_type", userInfo.getIdentityType());//证件类型
		dataRow.set("mobile", userInfo.getMobile());//手机号
		dataRow.set("name", userInfo.getName());//姓名
		dataRow.set("nationality", userInfo.getNationality());//国籍
		dataRow.set("nick_name", userInfo.getNickName());//昵称
		dataRow.set("papers_addr", userInfo.getPapersAddr());//证件地址
		dataRow.set("sex", userInfo.getSex());//性别
		dataRow.set("sign_office", userInfo.getSignOffice());//签发机构
		dataRow.set("validity_begin", userInfo.getValidityBegin());//证件有效期开始日期
		dataRow.set("validity_end", userInfo.getValidityEnd());//证件有效期结束日期
		dataRow.set("address", userExtendModel.getAddress());//联系地址
		dataRow.set("education", userExtendModel.getEducation());//学历
		dataRow.set("email", userExtendModel.getEmail());//邮箱
		dataRow.set("ethnicname", userExtendModel.getEthnicName());//民族
		dataRow.set("postcode", userExtendModel.getPostCode());//邮编
		dataRow.set("telephone", userExtendModel.getTelephone());//电话号码
		dataRow.set("fundAccount", userFundAccount.getFundAccount());//登录的资金帐号
		dataRow.set("fundAccountType", userFundAccount.getType());//登录的资金帐号
		dataRow.set("fundAccountState", userFundAccount.getState());//登录的资金帐号状态
		dataRow.set("occupation", userExtendModel.getOccupation());//职业
		dataRow.set("education", userExtendModel.getEducation());//学历
		return dataRow;
	}
	
	/**
	 * @描述：根据登录基本信息，同步用户基本信息
	 * @作者：刘恺
	 * @时间：2016年9月7日 下午11:37:36
	 * @param account
	 * @param pwdValue
	 * @param org_id
	 * @param client_id
	 * @param accountType 
	 * @return
	 * @throws Exception
	 */
	private Map<String, Object> synUserInfo(String account, String pwdValue, String org_id, String client_id, String accountType) throws Exception
	{
		//调用第三方接口，根据资金账号查询用户信息
		DataRow input = new DataRow();
		input.set("client_id", client_id);
		//		input.set("password", pwdValue);
		input.set("org_id", org_id);
		DataRow thirdUserInfo = thirdInterface.queryUserInfoByAccount(input);
		if (thirdUserInfo == null || thirdUserInfo.isEmpty())
		{
			throw new BusinessException(ErrorCodeBusiness.LOGIN_QUERYTHIRDUSERINFO_FAIL);
		}
		if (StringHelper.isBlank(thirdUserInfo.getString("org_id")))
		{
			thirdUserInfo.set("org_id", org_id);
		}
		pwdValue = PwdEncryptUtil.encryptionPsw(pwdValue);
		String identity_type = thirdUserInfo.getString("identity_type");
		String identity_num = thirdUserInfo.getString("identity_num");
		
		//根据身份证在我们本地数据库查找用户信息
		UserInfoModel userInfo = userInfoService.queryUserInfobyIdNumAndName(identity_type, identity_num, thirdUserInfo.getString("name"), client_id);
		if (userInfo == null)
		{
			if (DictionaryConstants.IDENTITYNUM_EIGHTEEN == identity_num.length())
			{
				String newIdentityNum = DataFormatUtils.idNum18To15(identity_num);
				userInfo = userInfoService.queryUserInfobyIdNumAndName(identity_type, newIdentityNum, thirdUserInfo.getString("name"), client_id);
			}
		}
		
		boolean isNewUser = userInfo == null;
		if (isNewUser)
		{
			userInfo = new UserInfoModel();
		}
		userInfo.setIdentityType(thirdUserInfo.getString("identity_type"));//证件类型
		userInfo.setIdentityNum(thirdUserInfo.getString("identity_num"));//证件号码
		userInfo.setName(thirdUserInfo.getString("name"));//姓名
		userInfo.setNickName(thirdUserInfo.getString("nick_name"));//昵称
		userInfo.setSex(thirdUserInfo.getString("sex"));//性别
		userInfo.setBirthday(thirdUserInfo.getString("birthday"));//生日
		userInfo.setMobile(thirdUserInfo.getString("mobile"));//手机号码
		userInfo.setSignOffice(thirdUserInfo.getString("sign_office"));//证件签署机构
		userInfo.setPapersAddr(thirdUserInfo.getString("papers_addr"));//证件地址
		userInfo.setValidityBegin(thirdUserInfo.getString("validity_begin"));//证件有效期开始日期
		userInfo.setValidityEnd(thirdUserInfo.getString("validity_end"));//证件有效期结束日期
		userInfo.setNationality(thirdUserInfo.getString("country"));//国籍
		userInfo.setBranchNo(thirdUserInfo.getString("org_id"));//营业部
		userInfo.setClientId(thirdUserInfo.getString("client_id"));
		
		UserExtendModel userExtend = new UserExtendModel();
		userExtend.setEmail(thirdUserInfo.getString("email"));//邮箱
		userExtend.setTelephone(thirdUserInfo.getString("telephone"));//联系电话
		userExtend.setAddress(thirdUserInfo.getString("address"));//联系地址
		userExtend.setPostCode(thirdUserInfo.getString("post_code"));//邮政编码
		userExtend.setOccupation(thirdUserInfo.getString("occupational"));//职业
		userExtend.setEducation(thirdUserInfo.getString("adapter"));//学历
		userExtend.setLastLoginTime(new Date());
		
		DataRow data = new DataRow();
		data.set("linkman_name", thirdUserInfo.getString("emergency_name"));
		data.set("linkman_relation", thirdUserInfo.getString("emergency_relation"));
		data.set("linkman_mobile", thirdUserInfo.getString("emergency_mobile"));
		
		UserFundAccountModel userFundAccount = new UserFundAccountModel();
		userFundAccount.setFundAccount(account);
		userFundAccount.setType(accountType);
		userFundAccount.setIsMain(DictionaryConstants.BOL_TRUE);
		userFundAccount.setPwd(pwdValue);
		userFundAccount.setState(ThirdTBASConstants.FUNDACCOUNT_THIRDSTATE_NOMAL);
		if (isNewUser)
		{
			userInfoService.addUserInfoAndExtendAndAccount(userInfo, userExtend, userFundAccount,data);
		}
		else
		{
			userInfoService.updateUserInfoAndExtendAndAccount(userInfo, userExtend, userFundAccount,data);
		}
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("userInfo", userInfo);
		resultMap.put("thirdUserInfo", thirdUserInfo);
		resultMap.put("userExtend", userExtend);
		resultMap.put("userFundAccount", userFundAccount);
		return resultMap;
	}
	
	/**
	 * @描述：初始化入参
	 * @作者：刘恺
	 * @时间：2016年9月9日 下午2:08:07
	 */
	private void initVar()
	{
		account = this.getAndCheckBlankStrParam("account", ErrorCodeCheckInput.BALNK_LOGIN_ACCOUNT);
		pwdValue = this.getAndCheckBlankStrParam("pwd_value", ErrorCodeCheckInput.BALNK_PASSWORD);
		loginType = this.getStrParameter("login_type", DictionaryConstants.LOGIN_TYPE_LOGIN_FOR_FUNDACCOUNT);
		accountType = this.getStrParameter("account_type", ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
		client_id=this.getAndCheckBlankStrParam("client_id",ErrorCodeCheckInput.BLANK_FUNDACCOUNT_CLIENTID);
		org_id=this.getAndCheckBlankStrParam("org_id",ErrorCodeCheckInput.BLANK_ORG_ID);
	}
}
