package com.thinkive.fxc.ismp.bus.base.basicdata.function;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.thinkive.server.ResultVo;
import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BasicServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.EnumValueModel;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.EnumInfoService;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.server.InvokeException;

/**
 * @描述: 获取数据字典信息
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 刘恺
 * @版本: 2.0.0 
 * @创建时间: 2016年9月19日 下午5:29:05
 */
public class Function1004169 extends ISMPBaseFunction
{
	
	private String enum_type;
	
	public ResultVo execute() throws InvokeException
	{
		initVar();
		
		ResultVo resultVo = new ResultVo();
		String[] arr = enum_type.split(",");
		Map<String, List<DataRow>> resultMap = new HashMap<String, List<DataRow>>();
		for (int i = 0; i < arr.length; i++)
		{
			resultMap.put(arr[i], new ArrayList<DataRow>());
		}
		EnumInfoService enumService = SpringHelper.getBean(BasicServiceBeanIdConstants.SERVICE_ID_ENUMINFO, EnumInfoService.class);
		List<EnumValueModel> returnList = enumService.queryByEmunNo(enum_type);
		List<EnumValueModel> resultAll = new ArrayList<EnumValueModel>();
		if(returnList!=null&&returnList.size()>0){
			for (EnumValueModel item : returnList)
			{
				item.set("enum_type", item.getEnumNo());
				item.set("item_name", item.getItemName());
				item.set("item_value", item.getItemValue());
				item.set("orderline", item.getOrderLine());
				resultMap.get(item.getEnumNo()).add(item);
				resultAll.add(item);
			}
			if (arr.length == 1)
			{
				resultVo.setResult(resultAll);
			}
			else
			{
				for (int i = 0; i < arr.length; i++)
				{
					resultVo.setResult(arr[i], resultMap.get(arr[i]));
				}
			}
		}else{
			resultVo.setErrorMsg("为查询到数据字典配置");
			resultVo.setErrorNo(-1);
		}
		return resultVo;
	}
	
	private void initVar()
	{
		enum_type = this.getAndCheckBlankStrParam("enum_type", ErrorCodeCheckInput.BLANK_FUNDACCOUNT);
	}
}
