package com.thinkive.fxc.ismp.bus.business.gem.function;

import java.util.List;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessConstants;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.model.ChoiceAccountRecordModel;
import com.thinkive.fxc.ismp.bus.base.business.model.LinkmanRecordModel;
import com.thinkive.fxc.ismp.bus.base.business.service.BusinessEntityService;
import com.thinkive.fxc.ismp.bus.base.business.service.ChoiceAccountRecordService;
import com.thinkive.fxc.ismp.bus.base.business.service.LinkmanRecordService;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.server.ResultVo;

/**
 * 描述: 创业板转签---查询创业板转签业务数据
 * 版权: Copyright (c) 2010
 * 公司: 思迪科技 
 * 作者: 刘恺
 * 版本: 1.0 
 * 创建日期: 2016年3月3日 
 * 创建时间: 下午3:12:21
 */
public class Function1004021 extends ISMPBaseFunction
{
	
	private Long userId;//用户编号
	
	@Override
	public ResultVo execute() throws Exception
	{
		initVar();
		ResultVo resultVo = new ResultVo();
		BusinessEntityService businessEntityService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_BUSINESSENTITY, BusinessEntityService.class);
		BusinessEntityModel businessEntityModel = businessEntityService.queryNotCompleteByUserIdAndBusinessCode(userId, BusinessConstants.BUSINESS_CYBSIGN);
		if (null == businessEntityModel)
		{
			businessEntityModel = new BusinessEntityModel();
			businessEntityModel.set("query_flag", DictionaryConstants.BOL_FALSE);
		}
		else
		{
			businessEntityModel.set("query_flag", DictionaryConstants.BOL_TRUE);
			String nodeId = businessEntityModel.getNodeId();
			if (DictionaryConstants.FLOW_LASTSTEP_NEXT.equals(nodeId))
			{
				ChoiceAccountRecordService choiceAccountRecordService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_CHOICEACCOUNTRECORD, ChoiceAccountRecordService.class);
				List<ChoiceAccountRecordModel> accountList = choiceAccountRecordService.queryByBusinessId(businessEntityModel.getId());
				resultVo.setResult("accountList", accountList);
				LinkmanRecordService linkmanRecordService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_LINKMANRECORD, LinkmanRecordService.class);
				List<LinkmanRecordModel> linkManList = linkmanRecordService.queryByParams(businessEntityModel.getId(), "cybsign_linkman");
				resultVo.setResult("linkManList", linkManList);
			}
		}
		
		resultVo.setResult("defaultDate", new DataRow());
		resultVo.setResult("businessinfo", businessEntityModel);
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		return resultVo;
	}
	
	private void initVar()
	{
		userId = this.formatLongParam(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID), ErrorCodeCheckInput.LONG_FORMAT_ERROR);
	}
}
