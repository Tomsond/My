package com.thinkive.fxc.ismp.bus.business.khzzhf.service.impl;

import java.util.List;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.jdbc.session.Session;
import com.thinkive.base.jdbc.session.SessionFactory;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessTableConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;
import com.thinkive.fxc.ismp.bus.business.khzzhf.dao.KhzzhfDao;
import com.thinkive.fxc.ismp.bus.business.khzzhf.dao.VisitSurveyRecordDao;
import com.thinkive.fxc.ismp.bus.business.khzzhf.dao.impl.KhzzhfDaoImpl;
import com.thinkive.fxc.ismp.bus.business.khzzhf.dao.impl.VisitSurveyRecordDaoImpl;
import com.thinkive.fxc.ismp.bus.business.khzzhf.model.VisitSurveyRecordModel;
import com.thinkive.fxc.ismp.bus.business.khzzhf.service.KhzzhfService;
import com.thinkive.fxc.ismp.bus.business.service.impl.BusinessCommonServiceImpl;

public class KhzzhfServiceImpl extends BusinessCommonServiceImpl implements KhzzhfService
{
    private KhzzhfDao khzzhfDao = new KhzzhfDaoImpl(); 
    
    public void setKhzzhfDao(KhzzhfDao khzzhfDao)
    {
        this.khzzhfDao = khzzhfDao;
    }

    private VisitSurveyRecordDao visitSurveyRecordDao  = new VisitSurveyRecordDaoImpl();
    
    public void setVisitSurveyRecordDao(VisitSurveyRecordDao visitSurveyRecordDao)
    {
        this.visitSurveyRecordDao = visitSurveyRecordDao;
    }
    
    @Override
    public void addOrUpdateEntityAnswer(String answerStr, BusinessEntityModel businessEntityModel, String subId, String nodeId)
            throws Exception
    {
        Session session = null;
        try
        {
            //创建session，开启事务
            session = SessionFactory.getSession(SystemConstants.DB_ISMP);
            session.beginTrans();
            
            Long businessId = businessEntityModel.getId();
            
            //先删除目前已有的问卷答案
            visitSurveyRecordDao.deleteByBusinessId(businessId, nodeId, session);
            //批量添加
            //step4：解析用户答案
            String[] answerList = answerStr.split("\\|"); 
            for (String answerItem : answerList)
            {
                String[] answerInfo = answerItem.split("_");
                String questionId = answerInfo[0];
                String answerId = answerInfo[1];
                Long mark = Long.parseLong(answerInfo[2]);
                VisitSurveyRecordModel visitSurveyRecordModel = new VisitSurveyRecordModel();
                visitSurveyRecordModel.setQueId(questionId);
                visitSurveyRecordModel.setAnsId(answerId);
                visitSurveyRecordModel.setMark(mark);
                visitSurveyRecordModel.setBusinessId(businessId);
                visitSurveyRecordModel.setNodeId(nodeId);
                visitSurveyRecordModel.setSubId(subId);
                visitSurveyRecordDao.add(visitSurveyRecordModel);
            }
            session.commitTrans();
        }
        catch (Exception e)
        {
            if (session != null)
            {
                session.rollbackTrans();
            }
            throw e;
        }
        finally
        {
            if (session != null)
            {
                session.close();
            }
        }
    }

    @Override
    public DataRow querySubjectBySubjectNo(String subjectNo) throws Exception
    {
        return khzzhfDao.querySubjectBySubjectNo(subjectNo);
    }
    
    @Override
    public List<DataRow> queryAllBySubjectNo(String subjectNo) throws Exception
    {
        return khzzhfDao.queryAllBySubjectNo(subjectNo);
    }

    @Override
    public BusinessEntityModel queryCompleteByUserIdAndBusinessCode(long userId, String businessCode) throws Exception
    {
        return khzzhfDao.queryCompleteByUserIdAndBusinessCode(userId, businessCode);
    }

    
    
}
