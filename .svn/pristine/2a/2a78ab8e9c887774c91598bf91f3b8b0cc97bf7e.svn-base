package com.thinkive.fxc.ismp.bus.business.mark;


import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput;
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.business.util.PwdEncryptUtil;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.server.ResultVo;
import com.thinkive.server.util.SpringUtil;


/**
 * 作者：MIKE
 * 公司：深圳市思迪信息技术股份公司
 * 日期时间：2017年6月3日 上午11:25:57
 * 说明：适当性管理风险等级自动测评结果查询
 */
public class Function1004506 extends ISMPBaseFunction
{
	private Long userId;
	
	private String client_id;
	
	private String fund_account;
	
	private UserInfoService userInfoService;
	
	private ThirdInterface thirdInterface;
	@Override
	public ResultVo execute() throws Exception
	{
		initVar();
		ResultVo resultVo = new ResultVo();
		userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserInfoVo userInfoVo = userInfoService.queryAndCheckUserByUserIdAndType(userId, ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
	    DataRow Input = DataFormatUtils.packThirdInput(userInfoVo);
		Input.set("client_id", client_id);
		Input.set("fund_account", fund_account);
	    String password = userInfoVo.getPwd();
		if(!password.isEmpty()){
		   password=PwdEncryptUtil.decryptionPsw(password);
		 }
		Input.set("password", password);
		try {
			thirdInterface = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
			DataRow FxcpDr = thirdInterface.queryEvaluationResult(Input);
			resultVo.setResult(FxcpDr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
		resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
		return resultVo;
		
	}

	private void initVar()
	{
		userId = this.formatLongParam(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID), ErrorCodeCheckInput.LONG_FORMAT_ERROR);
		client_id = this.getStrParameter("client_id");
		fund_account = this.getStrParameter("fund_account");
	}	
}
