package com.thinkive.fxc.ismp.bus.business.dzhtqs.service.impl;

import java.util.List;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.jdbc.session.Session;
import com.thinkive.base.jdbc.session.SessionFactory;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessConstants;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.model.ThirdBankExtendModel;
import com.thinkive.fxc.ismp.bus.business.assets.thirdbank.vo.ThirdBankBusinessInfoVo;
import com.thinkive.fxc.ismp.bus.business.dzhtqs.dao.SignElectronicContractDao;
import com.thinkive.fxc.ismp.bus.business.dzhtqs.service.SignElectronicContractService;
import com.thinkive.fxc.ismp.bus.business.service.impl.BusinessCommonServiceImpl;

public class SignElectronicContractServiceImpl extends BusinessCommonServiceImpl implements SignElectronicContractService
{
    private SignElectronicContractDao signElectronicContractDao;
    
    
    
    public void setSignElectronicContractDao(SignElectronicContractDao signElectronicContractDao)
    {
        this.signElectronicContractDao = signElectronicContractDao;
    }

    @Override
    public List<DataRow> queryFundDealList(String fund_code)
    {
        return signElectronicContractDao.queryFundDealList(fund_code);
    }
    @Override
	public Long addSignContractBusinessInfoVo(DataRow dr) throws Exception
	{
		Long businessId = null;
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			
			//获取入参
			String nodeId =dr.getString("nodeId");
			String ip = dr.getString("ip");
			String opSource = dr.getString("opSource");
			String opStation = dr.getString("opStation");
			Long userId = dr.getLong("userId");
			String isComplete =dr.getString("isComplete");
			String dealResult =dr.getString("dealResult");
			//step1:添加电子合约操作示例
			BusinessEntityModel businessEntityModel = new BusinessEntityModel(userId, dr.getString("business_code"), nodeId, isComplete, dealResult, opSource, opStation, ip);
			businessEntityModel = this.addBusinessEntityModel(businessEntityModel, session);
			
			//step3:新增流程节点记录
			this.addFlowNodeModel(businessEntityModel.getId(), nodeId, ip, opSource, opStation, session);
			
			//step4：添加节点操作记录
			this.addNodeLogModel(businessEntityModel.getId(), nodeId, ip, opSource, opStation, session);
			businessId=businessEntityModel.getId();
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
		return businessId;
	}

}
