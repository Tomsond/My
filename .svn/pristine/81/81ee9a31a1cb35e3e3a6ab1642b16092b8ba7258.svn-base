package com.thinkive.fxc.ismp.bus.business.ggt.function;

import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.DateHelper;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.base.util.StringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BasicServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.service.TradeTimeService; 
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseFunction;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput; 
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.fxc.ismp.bus.third.service.ThirdAssetService;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.fxc.ismp.bus.third.service.ThirdTrdAccountService;
import com.thinkive.server.ResultVo;
import com.thinkive.server.util.SpringUtil;

/**
 * @描述: 港股通----获取港股通需要判断的账户条件
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年9月10日 下午2:52:51 
 */
public class Function1004200 extends ISMPBaseFunction{
	
	private Long userId; //用户ID
	 
	@SuppressWarnings("unchecked")
    @Override
	public ResultVo execute() throws Exception{
	    
		//step1: 获取入参并校验
		checkInput();

        ResultVo resultVo = new ResultVo();
		
		//step2:查询用户基本信息和用户账号信息,获取原手机号码
		UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
		UserInfoVo userInfoVo = userInfoService.queryAndCheckUserByUserIdAndType(userId, ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
		ThirdInterface thirdInterface = SpringUtil.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
		DataRow thirdInput = DataFormatUtils.packThirdInput(userInfoVo);
		//step3：获取柜台帐号
        ThirdTrdAccountService thirdTrdAccountService = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDTRDACCOUNT, ThirdTrdAccountService.class);
        Map<String, Object> accountInfo = thirdTrdAccountService.queryAndCheckGtAllAccountState(userInfoVo, true);
        List<DataRow> accountList = (List<DataRow>) accountInfo.get("accountList");
        //String accountState = (String) accountInfo.get("accountState");
        String focusMonitorCheckFlag = DictionaryConstants.BOL_TRUE;
        if(accountList != null && accountList.size() > 0)
        {
            String ymt_code = "";
            //查询港股通权限
            List<DataRow> rightLsit = thirdInterface.queryGGTRights(thirdInput);
            
            for (DataRow accountData : accountList)
            {
                ymt_code = accountData.getString("ymt_code");
                String open_flag = DictionaryConstants.BOL_FALSE;
                String trdacct = accountData.getString("trdacct");
                if(rightLsit != null && accountList.size() > 0)
                {
                    for(DataRow rigdata : rightLsit)
                    {
                        if(rigdata.getString("trdacct").equals(trdacct))
                        {
                            open_flag = DictionaryConstants.BOL_TRUE;
                        }
                    }
                    
                }
                accountData.set("open_flag", open_flag);//是否开通权限 0未开通   1已开通
                
            }
            //step4:重点监控账户检查
            thirdInput.set("ymt_code", ymt_code);//一码通
            thirdInput.set("exchange_type", "0");//交易类别  0-资金， G-沪HK,S-深HK
            if(StringHelper.isNotBlank(ymt_code))
            {
                DataRow zdjkjc = thirdInterface.funcExtacctMonitoracctCheck(thirdInput);
                focusMonitorCheckFlag = zdjkjc.getString("deal_flag");//处理标志 0-不允许继续业务；1-允许继续业务。
            }
            
        }
        //step:5:获取用户资产信息
        ThirdAssetService thirdAssetService = SpringHelper.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDASSET, ThirdAssetService.class);
        //Map<String, Object> assetCheckResult = thirdAssetService.checkAllAssetByZqAccount(userInfoVo, 500000.00);
        //String assetCheckFlag = (String) assetCheckResult.get("checkFlag"); 
        DataRow assetInfo = thirdAssetService.checkHKAsset(userInfoVo);
        String assetCheckFlag = assetInfo.getString("checkFlag");
        
        
        //step6:非失信人员名单客户（暂无接口）
        
        //step7:是否为中登时间
        String isTradeTime = DictionaryConstants.BOL_FALSE;
        TradeTimeService tradeTimeService = SpringHelper.getBean(BasicServiceBeanIdConstants.SERVICE_ID_TRADETIME, TradeTimeService.class);
        if (tradeTimeService.checkZdTradeTime()){
            isTradeTime = DictionaryConstants.BOL_TRUE;
        } 
        //step8:年龄校验，是否大于70岁
        String birthday = userInfoVo.getBirthday();
        String age_flag = DictionaryConstants.BOL_TRUE;
        if(checkAge(birthday, 70))
        {
            age_flag = DictionaryConstants.BOL_FALSE ;//年龄大于70岁
        }
		//step9:打包出参
		DataRow otherInfo = new DataRow();
        otherInfo.set("isTradeTime", isTradeTime);//是否为中登时间，0：否，1：是
		otherInfo.set("ageCheckFlag", age_flag); //年龄是否大于70岁，0：大于70，1：小于70
		otherInfo.set("assetCheckFlag", assetCheckFlag);//20日均资产是否大于50万，0：否，1：是，2：查询资产失败   
		otherInfo.set("focusMonitorCheckFlag", focusMonitorCheckFlag);//重点监控账户检查 0-不允许继续业务；1-允许继续业务。
        resultVo.setResult("otherInfo", otherInfo);
        resultVo.setResult("accountList", accountList);
		resultVo.setErrorNo(0);
		resultVo.setErrorMsg("调用成功");
		return resultVo;
	}
	
	
	
	/**
	 * @描述：获取入参并校验
	 * @作者：田源
	 * @时间：2016年9月19日 上午11:06:01
	 * @throws Exception
	 */
	private void checkInput() throws Exception{
		userId = Long.valueOf(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID));
	}
	
	/**
     * @描述: 检查年龄
     * @作者: 农仕冰
     * @时间: 2019年5月7日 上午10:05:00
     * @param firsTransactionData
     * @param year
     * @return
     */
    private boolean checkAge(String firsTransactionData, int year)
    {
        DataRow firstTradeTimeResult = new DataRow();
        firstTradeTimeResult.set("flag", DictionaryConstants.BOL_TRUE);
        boolean flag = true;
        Date firstDate = DateHelper.parseString(firsTransactionData, "yyyyMMdd");
        Calendar limitCalendar = Calendar.getInstance();
        limitCalendar.setTime(firstDate);
        limitCalendar.add(Calendar.YEAR, year);
        Calendar now = Calendar.getInstance();
        now.set(Calendar.HOUR_OF_DAY, 0);
        now.set(Calendar.MINUTE, 0);
        now.set(Calendar.SECOND, 0);
        int compareResult = now.compareTo(limitCalendar);
        if (-1 == compareResult)
        { //未满N月
            flag = false;
        }
        return flag;
    }
	
}
