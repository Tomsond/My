package com.thinkive.fxc.ismp.bus.base.business.service.impl;

import java.util.List;
import java.util.Map;

import com.thinkive.base.jdbc.session.Session;
import com.thinkive.base.jdbc.session.SessionFactory;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.dao.AgreeRecordDao;
import com.thinkive.fxc.ismp.bus.base.business.model.AgreeRecordModel;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.service.AgreeRecordService;
import com.thinkive.fxc.ismp.bus.base.business.service.SignAndVerifyService;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.business.service.impl.BusinessCommonServiceImpl;

/**
 * @描述: 用户签署协议记录服务实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 刘恺
 * @版本: 2.0.0 
 * @创建时间: 2016年9月2日 上午11:44:32
 */
public class AgreeRecordServiceImpl extends BusinessCommonServiceImpl implements AgreeRecordService
{
	
	private AgreeRecordDao agreeRecordDao;
	
	public void setAgreeRecordDao(AgreeRecordDao agreeRecordDao)
	{
		this.agreeRecordDao = agreeRecordDao;
	}
	
	@Override
	public void addBatch(List<AgreeRecordModel> agreeRecords, Long businessId, String nodeId) throws Exception
	{
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			//删除记录
			agreeRecordDao.deleteByBusinessIdAndNodeId(businessId, nodeId, session);
			//添加新记录
			agreeRecordDao.addBatch(agreeRecords, session);
			//先删除目前已有的问卷答案
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
	}
	
	@Override
	public void addBusinessAndBatchAddAgree(List<Map<String, String>> allSignList, BusinessEntityModel businessEntityModel, String nodeId) throws Exception
	{
		Session session = null;
		try
		{
			//创建session，开启事务
			session = SessionFactory.getSession(SystemConstants.DB_ISMP);
			session.beginTrans();
			
			//step1：新增业务办理实例
			this.addBusinessEntityModel(businessEntityModel, session);
			
			//入参
			Long businessId = businessEntityModel.getId();
			String ip = businessEntityModel.getIp();
			String opSource = businessEntityModel.getOpSource();
			String opStation = businessEntityModel.getOpStation();
			
			//step2：新增业务节点记录
			this.addFlowNodeModel(businessId, nodeId, ip, opSource, opStation, session);
			
			//step3：添加节点操作记录
			this.addNodeLogModel(businessId, nodeId, ip, opSource, opStation, session);
			
			//根据用户提交的协议获取协议对象
			SignAndVerifyService signAndVerifyService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SIGNANDVERIFY, SignAndVerifyService.class);
			List<AgreeRecordModel> agreeRecordModels = signAndVerifyService.getAgreeRecordModels(businessEntityModel.getUserId(), allSignList, businessId, nodeId,"");
			
			//删除记录
			agreeRecordDao.deleteByBusinessIdAndNodeId(businessId, nodeId, session);
			//添加新记录
			agreeRecordDao.addBatch(agreeRecordModels, session);
			session.commitTrans();
		}
		catch (Exception e)
		{
			if (session != null)
			{
				session.rollbackTrans();
			}
			throw e;
		}
		finally
		{
			if (session != null)
			{
				session.close();
			}
		}
	}

    @Override
    public void addSign(List<AgreeRecordModel> agreeRecordModels) throws Exception
    {
        Session session = null;
        try
        {
            //创建session，开启事务
            session = SessionFactory.getSession(SystemConstants.DB_ISMP);
            session.beginTrans();
            //添加新记录
            agreeRecordDao.addBatch(agreeRecordModels, session);
            //先删除目前已有的问卷答案
            session.commitTrans();
        }
        catch (Exception e)
        {
            if (session != null)
            {
                session.rollbackTrans();
            }
            throw e;
        }
        finally
        {
            if (session != null)
            {
                session.close();
            }
        }
        
    }

    @Override
    public void addBatch_new(List<AgreeRecordModel> agreeRecords, Long businessId, String nodeId) throws Exception
    {
        Session session = null;
        try
        {
            if (agreeRecords != null && agreeRecords.size() > 0)
            {
                //创建session，开启事务
                session = SessionFactory.getSession(SystemConstants.DB_ISMP);
                session.beginTrans();
                //删除记录
                agreeRecordDao.deleteByBusinessIdAndNodeId(businessId, nodeId, session);
                //添加新记录
                for (AgreeRecordModel agreeRecord : agreeRecords)
                {
                    agreeRecordDao.addBatch(agreeRecord, session);
                }
                session.commitTrans();
            }
        }
        catch (Exception e)
        {
            if (session != null)
            {
                session.rollbackTrans();
            }
            throw e;
        }
        finally
        {
            if (session != null)
            {
                session.close();
            }
        }
    }
}
