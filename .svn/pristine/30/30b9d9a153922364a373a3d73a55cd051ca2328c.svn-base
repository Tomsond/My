package com.thinkive.fxc.ismp.bus.base.business.dao.impl;

import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.thinkive.base.config.Configuration;
import com.thinkive.base.util.DateHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessTableConstants;
import com.thinkive.fxc.ismp.bus.base.business.dao.UserloginLogDao;
import com.thinkive.fxc.ismp.bus.base.business.model.UserLoginLogModel;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;

/**
 * @描述: 用户登录日志表(T_USER_LOGIN_LOG)数据层接口实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年8月25日 下午6:29:06
 */
public class UserLoginLogDaoImpl extends ISMPBaseDao implements UserloginLogDao
{

    String dbtype = Configuration.getString("system.dbtype", SystemConstants.DB_TYPE_ORACLE);
    
    @Override
    public UserLoginLogModel add(UserLoginLogModel userLoginLogModel)
    {
        String logId = getSeqValue(SystemConstants.DB_ISMP,BusinessTableConstants.T_USER_LOGIN_LOG);
        userLoginLogModel.setLogId(Long.valueOf(logId));
        userLoginLogModel.setCreateDate(new Date());
        userLoginLogModel.setUpdateDate(new Date());
        this.getJdbcTemplate().insert(BusinessTableConstants.T_USER_LOGIN_LOG, userLoginLogModel);
        return userLoginLogModel;
    }

    @Override
    public Date queryLastLogDate(Long userId)
    {
        Date lastLoginDate=null;
        String sql = "SELECT TO_CHAR(MAX(TO_DATE(SUBSTR(UL.CREATE_DATE,1),'yyyy-MM-dd hh24:mi:ss')),'yyyy-MM-dd hh24:mi:ss') CREATE_DATE FROM T_USER_LOGIN_LOG UL WHERE UL.USER_ID = ?";
        if (SystemConstants.DB_TYPE_MYSQL.equals(dbtype))
        {
            sql = "SELECT DATE_FORMAT(MAX(DATE_FORMAT(SUBSTR(UL.CREATE_DATE,1),'%Y-%m-%d %H:%i:%S')),'%Y-%m-%d %H:%i:%S') CREATE_DATE FROM T_USER_LOGIN_LOG UL WHERE UL.USER_ID = ?";
        }
        String dateString=this.getJdbcTemplate().queryString(sql, new Object[] { userId });
        if(StringUtils.isNotBlank(dateString)){
            lastLoginDate=DateHelper.parseString(dateString, DateHelper.pattern_time);
        }
        return lastLoginDate;
    }

}
