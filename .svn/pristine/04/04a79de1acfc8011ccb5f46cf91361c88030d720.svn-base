package com.thinkive.fxc.ismp.bus.base.basicdata.dao.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.StringUtil;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BaseTableConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.dao.BusinessRightsDao;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.BusinessRightsModel;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;
 /**
 * @描述: 公共-营业部业务权限表(T_FXC_BUSINESS_RIGHTS) 数据层接口实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 尹杰民
 * @版本: 2.0.0 
 * @创建时间: 2016年8月18日 下午5:19:46
 */
public class BusinessRightsDaoImpl extends ISMPBaseDao implements BusinessRightsDao
{
    
    @Override
    public BusinessRightsModel add(BusinessRightsModel businessRightsModel) throws Exception
    {
        String id = this.getSeqValue(SystemConstants.DB_ISMP,BaseTableConstants.T_FXC_BUSINESS_RIGHTS);
        businessRightsModel.setId(Long.valueOf(id));
        businessRightsModel.setCreateDate(new Date());
        this.getJdbcTemplate().insert(BaseTableConstants.T_FXC_BUSINESS_RIGHTS, businessRightsModel);
        return businessRightsModel;
    }
    
    @Override
    public int update(BusinessRightsModel businessRightsModel) throws Exception
    {
        Long id = businessRightsModel.getId();
        businessRightsModel.setUpdateDate(new Date());
        return this.getJdbcTemplate().update(BaseTableConstants.T_FXC_BUSINESS_RIGHTS, businessRightsModel, "ID", id);
    }
    
    @Override
    public BusinessRightsModel queryByBranchId(String branchId) throws Exception
    {
        StringBuilder sql = new StringBuilder();
        List<String> paramList = new ArrayList<String>();
        sql.append(" SELECT ID, BRANCH_ID, TYPE, ROLE_ID, USER_ID, SUBRANCH_ID, CREATE_DATE, CREATE_BY, UPDATE_DATE, UPDATE_BY");
        sql.append(" FROM ");
        sql.append(BaseTableConstants.T_FXC_BUSINESS_RIGHTS);
        sql.append(" WHERE 1=1 ");
        if ( StringUtil.isNotEmpty(branchId) )
        {
            sql.append(" AND BRANCH_ID = ? ");
            paramList.add(branchId);
        }
        DataRow queryResult = this.getJdbcTemplate().queryMap(sql.toString(), paramList.toArray());
        return ModelUtil.packInfo(queryResult, BusinessRightsModel.class);
    }
    
}
