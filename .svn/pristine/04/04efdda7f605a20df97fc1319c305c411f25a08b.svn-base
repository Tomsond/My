package com.thinkive.fxc.ismp.bus.business.ggt.function;

import java.util.Map;






import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.SpringHelper;
import com.thinkive.base.util.StringHelper;
import com.thinkive.fxc.ismp.bus.base.business.constants.BusinessServiceBeanIdConstants;
import com.thinkive.fxc.ismp.bus.base.business.constants.SurveyNodePropertyConstants;
import com.thinkive.fxc.ismp.bus.base.business.function.IsmpFlowBaseFunction;
import com.thinkive.fxc.ismp.bus.base.business.model.BusinessEntityModel;
import com.thinkive.fxc.ismp.bus.base.business.service.SurveyAnswerRecordService;
import com.thinkive.fxc.ismp.bus.base.business.service.SurveyAnswerResultService;
import com.thinkive.fxc.ismp.bus.base.business.service.SurveyOperationService;
import com.thinkive.fxc.ismp.bus.base.business.service.UserInfoService;
import com.thinkive.fxc.ismp.bus.base.business.utils.ModularNodeUtil;
import com.thinkive.fxc.ismp.bus.base.business.vo.UserInfoVo;
import com.thinkive.fxc.ismp.bus.base.constants.DictionaryConstants;
import com.thinkive.fxc.ismp.bus.base.constants.ErrorCodeCheckInput; 
import com.thinkive.fxc.ismp.bus.business.ggt.contants.GgtContants;
import com.thinkive.fxc.ismp.bus.business.ggt.service.GgtService;
import com.thinkive.fxc.ismp.bus.business.util.DataFormatUtils;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdDictionaryConstants;
import com.thinkive.fxc.ismp.bus.third.constants.ThirdInterfaceConstant;
import com.thinkive.fxc.ismp.bus.third.service.ThirdInterface;
import com.thinkive.server.InvokeException;
import com.thinkive.server.ResultVo;
import com.thinkive.server.util.SpringUtil;

/**
 * @描述: 港股通--风险测评
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年9月9日 上午11:20:37
 */
public class Function1004210 extends IsmpFlowBaseFunction{
    
    private Long   userId;         //用户编号
                                    
    private String answerStr;      //答案信息
                                    
    private String question_source;
    
    public ResultVo execute() throws Exception
    {
        
        checkInput();
        
        UserInfoService userInfoService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_USERINFO, UserInfoService.class);
        UserInfoVo userInfo = userInfoService.queryAndCheckUserByUserIdAndType(userId,ThirdInterfaceConstant.USER_ACCOUNT_TYPE_ZQ);
        
        //查询正在办理的港股通业务数据
        //BusinessEntityModel businessEntityModel = businessEntityService.queryNotCompleteByUserIdAndBusinessCode(userId, GgtContants.BUSINESS_CODE);
        GgtService ggtService = SpringHelper.getBean(GgtContants.SERVER_ID_GGT, GgtService.class);
        BusinessEntityModel businessEntityModel = ggtService.queryOrAddBusinessInfo(userId, nodeId, opSource, opStation, ip);
        
        //step1：获取并检测属性配置是否正确
        Map<String, String> surveyNodeProperty = ModularNodeUtil.checkSurveyNodeProperty(nodePropertyConfigModelList);
        
        //答案为空，输出三方测评结果
        if(StringHelper.isBlank(answerStr))
        {
            DataRow fxcpInput = DataFormatUtils.packThirdInput(userInfo);
            fxcpInput.set("user_id", userId);
            fxcpInput.set("survey_sn", surveyNodeProperty.get(SurveyNodePropertyConstants.PROPERTY_KEY_THIRD_CODE));
            ThirdInterface thirdInterface = SpringUtil.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
            DataRow FxcpDr = thirdInterface.getQuestionnaire(fxcpInput);
            DataRow fxcp = getClientPrefer(fxcpInput);
            FxcpDr.set("min_rank_flag", fxcp.getString("min_rank_flag"));//0 非最低 1最低
            FxcpDr.set("en_invest_kind", fxcp.getString("en_invest_kind"));//投资品种
            FxcpDr.set("en_invest_term", fxcp.getString("en_invest_term"));//投资期限
            resultVo.setResult("checkResult", FxcpDr); 
            declareNotChangeNodeId();
            returnBusinessEntityModel(businessEntityModel);
            return resultVo;
        }

        //step2：校验问卷是否通过，如果通过则保存答案
        SurveyOperationService surveyOperationService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SURVEYOPERATION, SurveyOperationService.class);
        DataRow checkResult = surveyOperationService.surveyCheck(answerStr, userInfo, surveyNodeProperty);
        
        DataRow fxcpInput = DataFormatUtils.packThirdInput(userInfo);
        fxcpInput.set("user_id", userId);
        fxcpInput.set("survey_sn", surveyNodeProperty.get(SurveyNodePropertyConstants.PROPERTY_KEY_THIRD_CODE));
        DataRow fxcp = getClientPrefer(fxcpInput);
        checkResult.set("min_rank_flag", fxcp.getString("min_rank_flag"));//0 非最低 1最低
        checkResult.set("en_invest_kind", fxcp.getString("en_invest_kind"));//投资品种
        checkResult.set("en_invest_term", fxcp.getString("en_invest_term"));//投资期限
        resultVo.setResult("checkResult", checkResult);
        
        Long subId = null;
        String quetionSource = surveyNodeProperty.get(SurveyNodePropertyConstants.PROPERTY_KEY_QUESTION_SOURCE);
        if (DictionaryConstants.QUESTION_SOURCE_LOCAL.equals(quetionSource))
        {
            subId = checkResult.getLong("subId");
        }
        else if (DictionaryConstants.QUESTION_SOURCE_THIRD.equals(quetionSource))
        {
            subId = Long.parseLong(surveyNodeProperty.get(SurveyNodePropertyConstants.PROPERTY_KEY_THIRD_CODE));
        }
        
        //更新业务办理实例和用户答案
        businessEntityModel.setNodeId(submitBprocNodeConfigAndDefineVO.getNextBpNodeId());
        businessEntityModel.setIsComplete(DictionaryConstants.BOL_FALSE);
        SurveyAnswerRecordService surveyAnswerRecordMode = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SURVEYANSWERRECORD, SurveyAnswerRecordService.class);
        surveyAnswerRecordMode.addBusinessAndaddOrUpdateAnswer(answerStr, businessEntityModel, subId, nodeId);
        
        SurveyAnswerResultService surveyAnswerResultService = SpringHelper.getBean(BusinessServiceBeanIdConstants.SERVICE_ID_SURVEYANSWERRESULT, SurveyAnswerResultService.class);
        surveyAnswerResultService.addOrUpdateAnswer(businessEntityModel.getId(), subId, nodeId, checkResult.getString("riskvalue"), checkResult.getString("risklevel"),
                checkResult.getString("subitemname"));
        
        returnBusinessEntityModel(businessEntityModel);
        resultVo.setErrorNo(DictionaryConstants.INVOKE_FUNCTION_SUCCESS);
        resultVo.setErrorMsg(DictionaryConstants.INVOKE_FUNCTION_SUCCESSMSG);
        declareNotChangeNodeId();
        return resultVo;
    }
    

    
    private void checkInput() throws InvokeException{
        question_source = this.getStrParameter("question_source", "1"); //问卷来源 0：本地数据库  1：第三方接口
        userId = Long.valueOf(this.getAndCheckBlankStrParam("user_id", ErrorCodeCheckInput.BLANK_USERID));
        answerStr = this.getStrParameter("answerStr");
    }
    
    /**
     * @描述: 获取投资者偏好
     * @作者: 农仕冰
     * @时间: 2019年8月7日 下午4:12:18
     * @param fxcpInput
     * @return
     */
    private DataRow getClientPrefer(DataRow fxcpInput) throws Exception
    {
        DataRow resData = new DataRow();
        ThirdInterface thirdInterface = SpringUtil.getBean(ThirdDictionaryConstants.SERVICE_ID_THIRDINTERFACE, ThirdInterface.class);
        resData = thirdInterface.qryClientPrefer(fxcpInput);
        String tzzpz = "";
        if(StringHelper.isNotEmpty(resData.getString("en_invest_kind"))){
            String[] itemarray = resData.getString("en_invest_kind").split(",");
            for(int i=0;i<itemarray.length;i++){
                if(itemarray[i].equals("1")){
                    tzzpz+="债券、货币市场基金、债券基金等固定收益类投资品种"+",";
                }else if(itemarray[i].equals("2")){
                    tzzpz+="股票、混合型基金、偏股型基金、股票型基金等权益类投资品种"+",";
                }else if(itemarray[i].equals("3")){
                    tzzpz+="期货、融资融券等"+",";
                }else if(itemarray[i].equals("4")){
                    tzzpz+="复杂或高风险金融产品或服务"+",";
                }else if(itemarray[i].equals("5")){
                    tzzpz+="其它产品或服务"+",";
                }
            }
        }
        
        if(StringHelper.isNotBlank(tzzpz)){
            tzzpz=tzzpz.substring(0,tzzpz.length()-1);
        }
        String en_invest_term = resData.getString("en_invest_term");
        int maxIvest = 0;
        String en_invest_term_str = "";
        if(StringHelper.isNotBlank(en_invest_term))
        {
            for (int i = 0; i < en_invest_term.split(",").length; i++) 
            {
                if(maxIvest<Integer.parseInt(en_invest_term.split(",")[i]))
                   maxIvest =Integer.parseInt(en_invest_term.split(",")[i]);
            }
            if(maxIvest == 1){
                en_invest_term_str = "0到1年";
            }else if(maxIvest == 2){
                en_invest_term_str = "0到5年";
            }else if(maxIvest == 3){
                en_invest_term_str = "无特别要求";
            }
        }
        resData.set("en_invest_kind", tzzpz);
        resData.set("en_invest_term", en_invest_term_str);
        return resData;
    }
}
