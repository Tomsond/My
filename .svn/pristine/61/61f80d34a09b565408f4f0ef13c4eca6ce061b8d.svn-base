package com.thinkive.fxc.ismp.bus.base.basicdata.dao.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang.StringUtils;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BaseTableConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.dao.ChkidnoLogDao;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.ChkidnoLogModel;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.constants.SystemConstants;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;

/**
 * @描述:  公共--公安校验日志表(T_FXC_CHKIDNO_LOG)数据层接口实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年8月19日 下午3:52:02
 */
public class ChkidnoLogDaoImpl extends ISMPBaseDao implements ChkidnoLogDao
{

    @Override
    public ChkidnoLogModel add(ChkidnoLogModel chkidnoLogModel) throws Exception
    {
        String id=getSeqValue(SystemConstants.DB_ISMP,BaseTableConstants.T_FXC_CHKIDNO_LOG);
        chkidnoLogModel.setId(Long.valueOf(id));
        chkidnoLogModel.setCreateDate(new Date());
        this.getJdbcTemplate().insert(BaseTableConstants.T_FXC_CHKIDNO_LOG, chkidnoLogModel);
        return chkidnoLogModel;
    }

    @SuppressWarnings("unchecked")
    @Override
    public List<ChkidnoLogModel> queryByParams(ChkidnoLogModel chkidnoLogModel) throws Exception
    {
        String businessCode=chkidnoLogModel.getBusinessCode();
        Long businessId=chkidnoLogModel.getBusinessId();
        Long userId=chkidnoLogModel.GetUserId();
        String idNo=chkidnoLogModel.GetIdNo();
        if(StringUtils.isBlank(businessCode) && null == businessId && null == userId && StringUtils.isBlank(idNo)){
            return null;
        }
        List<String> paramsList=new ArrayList<String>();
        StringBuilder sql=new StringBuilder();
        sql.append("SELECT ID,BUSINESS_CODE,BUSINESS_ID,USER_ID,CHK_STATUS,CREATE_DATE,ID_NO,NAME,SOURCE FROM ");
        sql.append(BaseTableConstants.T_FXC_CHKIDNO_LOG);
        sql.append(" WHERE 1 = 1");
        if(StringUtils.isNotBlank(businessCode)){
            sql.append(" AND BUSINESS_CODE = ?");
            paramsList.add(businessCode);
        }
        if(null != businessId){
            sql.append(" AND BUSINESS_ID = ?");
            paramsList.add(businessId.toString());
        }
        if(null != userId){
            sql.append(" AND USER_ID = ?");
            paramsList.add(userId.toString());
        }
        if(StringUtils.isNotBlank(idNo)){
            sql.append(" AND ID_NO = ?");
            paramsList.add(idNo);
        }
        List<DataRow> queryResult=this.getJdbcTemplate().query(sql.toString(), paramsList.toArray());
        return ModelUtil.packList(queryResult, ChkidnoLogModel.class);
    }
    
}
