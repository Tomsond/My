package com.thinkive.fxc.ismp.bus.base.basicdata.dao.impl;

import java.util.ArrayList;
import java.util.List;

import com.thinkive.base.jdbc.DataRow;
import com.thinkive.base.util.StringHelper;
import com.thinkive.fxc.ismp.bus.base.basicdata.contants.BaseTableConstants;
import com.thinkive.fxc.ismp.bus.base.basicdata.dao.ThirdBankDao;
import com.thinkive.fxc.ismp.bus.base.basicdata.model.ThirdBankModel;
import com.thinkive.fxc.ismp.bus.base.basicdata.vo.ThirdBankInfoVo;
import com.thinkive.fxc.ismp.bus.base.common.ISMPBaseDao;
import com.thinkive.fxc.ismp.bus.base.util.ModelUtil;

/**
 * @描述: 公共-三方存管银行信息(T_FXC_THIRD_BANK)数据层接口实现类
 * @版权: Copyright (c) 2010
 * @公司: 深圳市思迪信息技术股份有限公司
 * @作者: 田源
 * @版本: 2.0.0 
 * @创建时间: 2016年8月26日 下午4:50:47
 */
public class ThirdBankDaoImpl extends ISMPBaseDao implements ThirdBankDao
{
	
	@Override
	public ThirdBankModel queryByBankNo(String bankNo)
	{
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT ID,BANK_NO,BIND_TYPE,IS_PWD,IS_BUFFET,SIGN_TYPE,SIGN_INFO,IS_CARD,CREATE_DATE,UPDATE_DATE,AGREE_NO,LINK_BANK_ORG FROM ");
		sql.append(BaseTableConstants.T_FXC_THIRD_BANK);
		sql.append(" WHERE BANK_NO = ?");
		DataRow queryResult = this.getJdbcTemplate().queryMap(sql.toString(), new Object[] { bankNo });
		return ModelUtil.packInfo(queryResult, ThirdBankModel.class);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public List<ThirdBankInfoVo> queryByBindTypeAndIsPwd(String bindType, String isPwd)
	{
		List<String> list = new ArrayList<String>();
		
		StringBuffer sql = new StringBuffer(
				"SELECT B.ID THIRD_BANK_ID,T.BANK_NO,T.BANK_NAME,T.BANK_FULL_NAME,T.BRIEF,T.SMALLIMG,T.BIGIMG,T.BGIMG,T.ORDER_LINE,T.THIRD_BANK_URL,T.BANK_SMALL_URL,B.BIND_TYPE,B.IS_PWD,B.IS_BUFFET,B.SIGN_TYPE,B.SIGN_INFO,B.IS_CARD,B.AGREE_NO,B.LINK_BANK_ORG FROM ");
		sql.append(BaseTableConstants.T_FXC_BANK_INFO + " T ");
		sql.append("INNER JOIN ");
		sql.append(BaseTableConstants.T_FXC_THIRD_BANK + " B ");
		sql.append("ON B.BANK_NO = T.BANK_NO ");
		sql.append(" WHERE 1=1 ");
		if (StringHelper.isNotBlank(bindType))
		{
			sql.append(" AND B.BINDTYPE = ? ");
			list.add(bindType);
		}
		if (StringHelper.isNotBlank(isPwd))
		{
			sql.append(" AND B.ISPWD = ? ");
			list.add(isPwd);
		}
		List<DataRow> queryResult = this.getJdbcTemplate().query(sql.toString(), list.toArray());
		return ModelUtil.packList(queryResult, ThirdBankInfoVo.class);
	}
	
	@Override
	public ThirdBankModel queryById(Long id)
	{
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT ID,BANK_NO,BIND_TYPE,IS_PWD,IS_BUFFET,SIGN_TYPE,SIGN_INFO,IS_CARD,CREATE_DATE,UPDATE_DATE,AGREE_NO,LINK_BANK_ORG FROM ");
		sql.append(BaseTableConstants.T_FXC_THIRD_BANK);
		sql.append(" WHERE ID = ?");
		DataRow queryResult = this.getJdbcTemplate().queryMap(sql.toString(), new Object[] { id });
		return ModelUtil.packInfo(queryResult, ThirdBankModel.class);
	}
	
}
